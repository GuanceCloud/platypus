
state 0
	$accept: .start $end 

	error  shift 3
	START_STMTS  shift 2
	.  error

	start  goto 1

state 1
	$accept:  start.$end 
	start:  start.EOF 

	$end  accept
	EOF  shift 4
	.  error


state 2
	start:  START_STMTS.stmts 
	start:  START_STMTS.EOLS 
	start:  START_STMTS.EOLS stmts 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 30
	LET  shift 29
	IMPORT  shift 31
	TYPE  shift 32
	.  error

	stmts  goto 5
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	var_def_stmt  goto 17
	fn_def_stmt  goto 18
	import_stmt  goto 19
	type_def_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10
	EOLS  goto 6

state 3
	start:  error.    (16)

	.  reduce 16 (src line 192)


state 4
	start:  start EOF.    (15)

	.  reduce 15 (src line 191)


state 5
	start:  START_STMTS stmts.    (12)

	.  reduce 12 (src line 179)


state 6
	EOLS:  EOLS.EOL 
	start:  START_STMTS EOLS.    (13)
	start:  START_STMTS EOLS.stmts 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 66
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 30
	LET  shift 29
	IMPORT  shift 31
	TYPE  shift 32
	.  reduce 13 (src line 183)

	stmts  goto 67
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	var_def_stmt  goto 17
	fn_def_stmt  goto 18
	import_stmt  goto 19
	type_def_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10

state 7
	stmts:  stmts_list.stmt 
	stmts:  stmts_list.    (18)
	stmts_list:  stmts_list.stmt sep 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 30
	LET  shift 29
	IMPORT  shift 31
	TYPE  shift 32
	.  reduce 18 (src line 208)

	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 68
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	var_def_stmt  goto 17
	fn_def_stmt  goto 18
	import_stmt  goto 19
	type_def_stmt  goto 20
	return_stmt  goto 21

state 8
	stmts:  stmt.    (19)
	stmts_list:  stmt.sep 

	SEMICOLON  shift 70
	EOL  shift 71
	.  reduce 19 (src line 209)

	sep  goto 69

state 9
	EOLS:  EOL.    (8)

	.  reduce 8 (src line 171)


state 10
	sem:  sem.EOL 
	sem:  sem.SEMICOLON 
	stmts_list:  sem.    (21)

	SEMICOLON  shift 73
	EOL  shift 72
	.  reduce 21 (src line 219)


state 11
	stmt:  ifelse_stmt.    (23)

	.  reduce 23 (src line 231)


state 12
	stmt:  for_in_stmt.    (24)

	.  reduce 24 (src line 232)


state 13
	stmt:  for_stmt.    (25)

	.  reduce 25 (src line 233)


state 14
	stmt:  continue_stmt.    (26)

	.  reduce 26 (src line 234)


state 15
	stmt:  break_stmt.    (27)

	.  reduce 27 (src line 235)


state 16
	stmt:  value_stmt.    (28)

	.  reduce 28 (src line 236)


state 17
	stmt:  var_def_stmt.    (29)

	.  reduce 29 (src line 237)


state 18
	stmt:  fn_def_stmt.    (30)

	.  reduce 30 (src line 238)


state 19
	stmt:  import_stmt.    (31)

	.  reduce 31 (src line 239)


state 20
	stmt:  type_def_stmt.    (32)

	.  reduce 32 (src line 240)


state 21
	stmt:  return_stmt.    (33)

	.  reduce 33 (src line 241)


state 22
	stmt:  assignment_stmt.    (34)

	.  reduce 34 (src line 242)


state 23
	sem:  SEMICOLON.    (5)

	.  reduce 5 (src line 166)


state 24
	ifelse_stmt:  if_elif_list.    (111)
	ifelse_stmt:  if_elif_list.ELSE stmt_block 
	if_elif_list:  if_elif_list.elif_elem 

	ELIF  shift 76
	ELSE  shift 74
	.  reduce 111 (src line 594)

	elif_elem  goto 75

state 25
	for_in_stmt:  FOR.in_expr stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON expr SEMICOLON stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON SEMICOLON stmt_block 
	for_stmt:  FOR.SEMICOLON expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.SEMICOLON expr SEMICOLON stmt_block 
	for_stmt:  FOR.SEMICOLON SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.SEMICOLON SEMICOLON stmt_block 

	SEMICOLON  shift 79
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	LET  shift 29
	.  error

	exprs  goto 34
	assignment_stmt  goto 81
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 77
	expr  goto 80
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_init_elem  goto 78
	slice_expr  goto 46
	var_def_stmt  goto 82

state 26
	continue_stmt:  CONTINUE.    (96)

	.  reduce 96 (src line 529)


state 27
	break_stmt:  BREAK.    (95)

	.  reduce 95 (src line 522)


state 28
	value_stmt:  expr.    (35)
	exprs:  expr.    (87)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	COMMA  reduce 87 (src line 478)
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	EQ  reduce 87 (src line 478)
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 35 (src line 246)


state 29
	var_def_stmt:  LET.identifier data_type EQ expr 
	var_def_stmt:  LET.identifier data_type 
	var_def_stmt:  LET.identifier EQ expr 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 105

state 30
	fn_def_stmt:  FN.identifier LEFT_PAREN RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN fn_def_params RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 106

state 31
	import_stmt:  IMPORT.pkg_name 
	import_stmt:  IMPORT.pkg_name AS identifier 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	pkg_name  goto 107
	identifier  goto 108

state 32
	type_def_stmt:  TYPE.identifier data_type 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 109

state 33
	return_stmt:  RETURN.    (75)
	return_stmt:  RETURN.exprs 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 75 (src line 418)

	exprs  goto 110
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 111
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 34
	exprs:  exprs.COMMA expr 
	assignment_stmt:  exprs.EQ exprs 

	COMMA  shift 112
	EQ  shift 113
	.  error


state 35
	if_elif_list:  if_elem.    (114)

	.  reduce 114 (src line 610)


state 36
	expr:  identifier.    (36)

	.  reduce 36 (src line 250)


state 37
	expr:  basic_literal.    (37)

	.  reduce 37 (src line 251)


state 38
	expr:  list_literal.    (38)

	.  reduce 38 (src line 252)


state 39
	expr:  map_literal.    (39)

	.  reduce 39 (src line 253)


state 40
	expr:  paren_expr.    (40)

	.  reduce 40 (src line 255)


state 41
	expr:  unary_expr.    (41)

	.  reduce 41 (src line 256)


state 42
	expr:  conditional_expr.    (42)

	.  reduce 42 (src line 257)


state 43
	expr:  arithmeticExpr.    (43)

	.  reduce 43 (src line 258)


state 44
	expr:  attr_expr.    (44)

	.  reduce 44 (src line 259)


state 45
	expr:  index_expr.    (45)

	.  reduce 45 (src line 260)


state 46
	expr:  slice_expr.    (46)

	.  reduce 46 (src line 261)


state 47
	expr:  in_expr.    (47)

	.  reduce 47 (src line 262)


state 48
	expr:  call_expr.    (48)

	.  reduce 48 (src line 263)


state 49
	if_elem:  IF.expr stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 114
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 50
	identifier:  ID.    (160)

	.  reduce 160 (src line 871)


state 51
	identifier:  QUOTED_STRING.    (161)

	.  reduce 161 (src line 875)


state 52
	basic_literal:  NUMBER.    (162)

	.  reduce 162 (src line 882)


state 53
	basic_literal:  TRUE.    (163)

	.  reduce 163 (src line 886)


state 54
	basic_literal:  FALSE.    (164)

	.  reduce 164 (src line 890)


state 55
	basic_literal:  STRING.    (165)

	.  reduce 165 (src line 894)


state 56
	basic_literal:  MULTILINE_STRING.    (166)

	.  reduce 166 (src line 899)


state 57
	basic_literal:  NIL.    (167)

	.  reduce 167 (src line 904)


state 58
	basic_literal:  NULL.    (168)

	.  reduce 168 (src line 908)


state 59
	list_literal:  LEFT_BRACKET.exprs EOLS_SPACE RIGHT_BRACKET 
	list_literal:  LEFT_BRACKET.exprs COMMA RIGHT_BRACKET 
	list_literal:  LEFT_BRACKET.RIGHT_BRACKET 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACKET  shift 116
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	exprs  goto 115
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 111
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 60
	map_literal:  LEFT_BRACE.RIGHT_BRACE 
	map_literal:  LEFT_BRACE.expr_colon_expr EOLS_SPACE RIGHT_BRACE 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACE  shift 117
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	expr_colon_expr  goto 118
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 119
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 61
	paren_expr:  LEFT_PAREN.expr EOLS_SPACE RIGHT_PAREN 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 120
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 62
	unary_expr:  ADD.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 121
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 63
	unary_expr:  SUB.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 122
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 64
	unary_expr:  NOT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 123
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 65
	index_expr:  DOT.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 

	LEFT_BRACKET  shift 124
	.  error


state 66
	EOLS:  EOLS EOL.    (9)

	.  reduce 9 (src line 172)


state 67
	start:  START_STMTS EOLS stmts.    (14)

	.  reduce 14 (src line 187)


state 68
	stmts:  stmts_list stmt.    (17)
	stmts_list:  stmts_list stmt.sep 

	SEMICOLON  shift 70
	EOL  shift 71
	.  reduce 17 (src line 202)

	sep  goto 125

state 69
	sep:  sep.SEMICOLON 
	sep:  sep.EOL 
	stmts_list:  stmt sep.    (20)

	SEMICOLON  shift 126
	EOL  shift 127
	.  reduce 20 (src line 215)


state 70
	sep:  SEMICOLON.    (1)

	.  reduce 1 (src line 160)


state 71
	sep:  EOL.    (2)

	.  reduce 2 (src line 161)


state 72
	sem:  sem EOL.    (6)

	.  reduce 6 (src line 167)


state 73
	sem:  sem SEMICOLON.    (7)

	.  reduce 7 (src line 168)


state 74
	ifelse_stmt:  if_elif_list ELSE.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 128
	empty_block  goto 129

state 75
	if_elif_list:  if_elif_list elif_elem.    (115)

	.  reduce 115 (src line 614)


state 76
	elif_elem:  ELIF.expr stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 131
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 77
	expr:  in_expr.    (47)
	for_in_stmt:  FOR in_expr.stmt_block 

	LEFT_BRACE  shift 130
	.  reduce 47 (src line 262)

	stmt_block  goto 132
	empty_block  goto 129

state 78
	for_stmt:  FOR for_init_elem.SEMICOLON expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem.SEMICOLON expr SEMICOLON stmt_block 
	for_stmt:  FOR for_init_elem.SEMICOLON SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem.SEMICOLON SEMICOLON stmt_block 

	SEMICOLON  shift 133
	.  error


state 79
	for_stmt:  FOR SEMICOLON.expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON.expr SEMICOLON stmt_block 
	for_stmt:  FOR SEMICOLON.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON.SEMICOLON stmt_block 

	SEMICOLON  shift 135
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 134
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 80
	exprs:  expr.    (87)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	for_init_elem:  expr.    (98)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	SEMICOLON  reduce 98 (src line 554)
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 87 (src line 478)


state 81
	for_init_elem:  assignment_stmt.    (99)

	.  reduce 99 (src line 554)


state 82
	for_init_elem:  var_def_stmt.    (100)

	.  reduce 100 (src line 554)


state 83
	assignment_stmt:  expr ADD_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 136
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 84
	assignment_stmt:  expr SUB_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 137
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 85
	assignment_stmt:  expr MUL_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 138
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 86
	assignment_stmt:  expr DIV_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 139
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 87
	assignment_stmt:  expr MOD_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 140
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 88
	in_expr:  expr IN.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 141
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 89
	call_expr:  expr LEFT_PAREN.function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr LEFT_PAREN.function_args COMMA RIGHT_PAREN 
	call_expr:  expr LEFT_PAREN.RIGHT_PAREN 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_PAREN  shift 143
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	function_args  goto 142
	call_expr  goto 48
	named_arg  goto 144
	identifier  goto 146
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 145
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 90
	conditional_expr:  expr GTE.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 147
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 91
	conditional_expr:  expr GT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 148
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 92
	conditional_expr:  expr OR.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 149
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 93
	conditional_expr:  expr AND.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 150
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 94
	conditional_expr:  expr LT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 151
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 95
	conditional_expr:  expr LTE.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 152
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 96
	conditional_expr:  expr NEQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 153
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 97
	conditional_expr:  expr EQEQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 154
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 98
	arithmeticExpr:  expr ADD.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 155
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 99
	arithmeticExpr:  expr SUB.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 156
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 100
	arithmeticExpr:  expr MUL.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 157
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 101
	arithmeticExpr:  expr DIV.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 158
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 102
	arithmeticExpr:  expr MOD.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 159
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 103
	index_expr:  expr LEFT_BRACKET.expr EOLS_SPACE RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET.expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET.expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 11 (src line 176)

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 160
	map_literal  goto 39
	expr_or_empty  goto 161
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	EOLS  goto 163
	EOLS_SPACE  goto 162

state 104
	attr_expr:  expr DOT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 164
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 105
	var_def_stmt:  LET identifier.data_type EQ expr 
	var_def_stmt:  LET identifier.data_type 
	var_def_stmt:  LET identifier.EQ expr 

	ID  shift 50
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	EQ  shift 166
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  error

	identifier  goto 174
	data_type  goto 165
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 106
	fn_def_stmt:  FN identifier.LEFT_PAREN RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN fn_def_params RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	LEFT_PAREN  shift 178
	.  error


state 107
	pkg_name:  pkg_name.DOT identifier 
	import_stmt:  IMPORT pkg_name.    (66)
	import_stmt:  IMPORT pkg_name.AS identifier 

	DOT  shift 179
	AS  shift 180
	.  reduce 66 (src line 373)


state 108
	pkg_name:  identifier.    (64)

	.  reduce 64 (src line 363)


state 109
	type_def_stmt:  TYPE identifier.data_type 

	ID  shift 50
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  error

	identifier  goto 174
	data_type  goto 181
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 110
	return_stmt:  RETURN exprs.    (76)
	exprs:  exprs.COMMA expr 

	COMMA  shift 112
	.  reduce 76 (src line 422)


state 111
	exprs:  expr.    (87)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 87 (src line 478)


state 112
	exprs:  exprs COMMA.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 182
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 113
	assignment_stmt:  exprs EQ.exprs 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	exprs  goto 183
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 111
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 114
	if_elem:  IF expr.stmt_block 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	LEFT_BRACE  shift 130
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error

	stmt_block  goto 184
	empty_block  goto 129

state 115
	exprs:  exprs.COMMA expr 
	list_literal:  LEFT_BRACKET exprs.EOLS_SPACE RIGHT_BRACKET 
	list_literal:  LEFT_BRACKET exprs.COMMA RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	COMMA  shift 185
	EOL  shift 9
	.  reduce 11 (src line 176)

	EOLS  goto 163
	EOLS_SPACE  goto 186

state 116
	list_literal:  LEFT_BRACKET RIGHT_BRACKET.    (155)

	.  reduce 155 (src line 844)


state 117
	map_literal:  LEFT_BRACE RIGHT_BRACE.    (158)

	.  reduce 158 (src line 860)


state 118
	expr_colon_expr:  expr_colon_expr.COMMA expr COLON expr 
	map_literal:  LEFT_BRACE expr_colon_expr.EOLS_SPACE RIGHT_BRACE 
	EOLS_SPACE: .    (11)

	COMMA  shift 187
	EOL  shift 9
	.  reduce 11 (src line 176)

	EOLS  goto 163
	EOLS_SPACE  goto 188

state 119
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr.COLON expr 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  shift 189
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 120
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	paren_expr:  LEFT_PAREN expr.EOLS_SPACE RIGHT_PAREN 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	EOL  shift 9
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 11 (src line 176)

	EOLS  goto 163
	EOLS_SPACE  goto 190

state 121
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	unary_expr:  ADD expr.    (129)
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 129 (src line 691)


state 122
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	unary_expr:  SUB expr.    (130)
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 130 (src line 695)


state 123
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	unary_expr:  NOT expr.    (131)
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 131 (src line 699)


state 124
	index_expr:  DOT LEFT_BRACKET.expr EOLS_SPACE RIGHT_BRACKET 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 191
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 125
	sep:  sep.SEMICOLON 
	sep:  sep.EOL 
	stmts_list:  stmts_list stmt sep.    (22)

	SEMICOLON  shift 126
	EOL  shift 127
	.  reduce 22 (src line 223)


state 126
	sep:  sep SEMICOLON.    (3)

	.  reduce 3 (src line 162)


state 127
	sep:  sep EOL.    (4)

	.  reduce 4 (src line 163)


state 128
	ifelse_stmt:  if_elif_list ELSE stmt_block.    (112)

	.  reduce 112 (src line 598)


state 129
	stmt_block:  empty_block.    (117)

	.  reduce 117 (src line 627)


state 130
	stmt_block:  LEFT_BRACE.stmts RIGHT_BRACE 
	empty_block:  LEFT_BRACE.RIGHT_BRACE 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACE  shift 193
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 30
	LET  shift 29
	IMPORT  shift 31
	TYPE  shift 32
	.  error

	stmts  goto 192
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	var_def_stmt  goto 17
	fn_def_stmt  goto 18
	import_stmt  goto 19
	type_def_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10

state 131
	elif_elem:  ELIF expr.stmt_block 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	LEFT_BRACE  shift 130
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error

	stmt_block  goto 194
	empty_block  goto 129

state 132
	for_in_stmt:  FOR in_expr stmt_block.    (97)

	.  reduce 97 (src line 540)


state 133
	for_stmt:  FOR for_init_elem SEMICOLON.expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON.expr SEMICOLON stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON.SEMICOLON stmt_block 

	SEMICOLON  shift 196
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 195
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 134
	for_stmt:  FOR SEMICOLON expr.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON expr.SEMICOLON stmt_block 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	SEMICOLON  shift 197
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 135
	for_stmt:  FOR SEMICOLON SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 202
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 199
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 201
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 200
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 198
	slice_expr  goto 46

state 136
	assignment_stmt:  expr ADD_EQ expr.    (90)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 90 (src line 494)


state 137
	assignment_stmt:  expr SUB_EQ expr.    (91)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 91 (src line 499)


state 138
	assignment_stmt:  expr MUL_EQ expr.    (92)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 92 (src line 504)


state 139
	assignment_stmt:  expr DIV_EQ expr.    (93)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 93 (src line 509)


state 140
	assignment_stmt:  expr MOD_EQ expr.    (94)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 94 (src line 514)


state 141
	in_expr:  expr.IN expr 
	in_expr:  expr IN expr.    (120)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	DOT  shift 104
	.  reduce 120 (src line 646)


state 142
	function_args:  function_args.COMMA expr 
	function_args:  function_args.COMMA named_arg 
	call_expr:  expr LEFT_PAREN function_args.EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr LEFT_PAREN function_args.COMMA RIGHT_PAREN 
	EOLS_SPACE: .    (11)

	COMMA  shift 203
	EOL  shift 9
	.  reduce 11 (src line 176)

	EOLS  goto 163
	EOLS_SPACE  goto 204

state 143
	call_expr:  expr LEFT_PAREN RIGHT_PAREN.    (128)

	.  reduce 128 (src line 685)


state 144
	function_args:  named_arg.    (123)

	.  reduce 123 (src line 660)


state 145
	in_expr:  expr.IN expr 
	function_args:  expr.    (124)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 124 (src line 664)


state 146
	expr:  identifier.    (36)
	named_arg:  identifier.EQ expr 

	EQ  shift 205
	.  reduce 36 (src line 250)


state 147
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr GTE expr.    (132)
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 132 (src line 705)


state 148
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr GT expr.    (133)
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 133 (src line 709)


state 149
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr OR expr.    (134)
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	DOT  shift 104
	IN  shift 88
	.  reduce 134 (src line 713)


state 150
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr AND expr.    (135)
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	DOT  shift 104
	IN  shift 88
	.  reduce 135 (src line 717)


state 151
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr LT expr.    (136)
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 136 (src line 721)


state 152
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr LTE expr.    (137)
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 137 (src line 725)


state 153
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr NEQ expr.    (138)
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 138 (src line 729)


state 154
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	conditional_expr:  expr EQEQ expr.    (139)
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 139 (src line 733)


state 155
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr ADD expr.    (140)
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 140 (src line 740)


state 156
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr SUB expr.    (141)
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 141 (src line 744)


state 157
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr MUL expr.    (142)
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 142 (src line 748)


state 158
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr DIV expr.    (143)
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 143 (src line 752)


state 159
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	arithmeticExpr:  expr MOD expr.    (144)
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 144 (src line 756)


state 160
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	index_expr:  expr LEFT_BRACKET expr.EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	expr_or_empty:  expr.    (149)
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  reduce 149 (src line 788)
	EOL  shift 9
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 11 (src line 176)

	EOLS  goto 163
	EOLS_SPACE  goto 206

state 161
	slice_expr:  expr LEFT_BRACKET expr_or_empty.COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET expr_or_empty.COLON expr_or_empty RIGHT_BRACKET 

	COLON  shift 207
	.  error


state 162
	expr_or_empty:  EOLS_SPACE.    (150)

	.  reduce 150 (src line 792)


state 163
	EOLS:  EOLS.EOL 
	EOLS_SPACE:  EOLS.    (10)

	EOL  shift 66
	.  reduce 10 (src line 175)


state 164
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	attr_expr:  expr DOT expr.    (148)
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	.  reduce 148 (src line 781)


state 165
	var_def_stmt:  LET identifier data_type.EQ expr 
	var_def_stmt:  LET identifier data_type.    (62)

	EQ  shift 208
	.  reduce 62 (src line 321)


state 166
	var_def_stmt:  LET identifier EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 209
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 167
	data_type:  INT.    (49)

	.  reduce 49 (src line 271)


state 168
	data_type:  FLOAT.    (50)

	.  reduce 50 (src line 275)


state 169
	data_type:  STR.    (51)

	.  reduce 51 (src line 279)


state 170
	data_type:  BOOL.    (52)

	.  reduce 52 (src line 283)


state 171
	data_type:  ANY.    (53)

	.  reduce 53 (src line 287)


state 172
	data_type:  list_type.    (54)

	.  reduce 54 (src line 291)


state 173
	data_type:  map_type.    (55)

	.  reduce 55 (src line 292)


state 174
	data_type:  identifier.    (56)

	.  reduce 56 (src line 294)


state 175
	data_type:  array_type.    (57)

	.  reduce 57 (src line 295)


state 176
	list_type:  LEFT_BRACKET.RIGHT_BRACKET data_type 
	array_type:  LEFT_BRACKET.NUMBER RIGHT_BRACKET data_type 

	NUMBER  shift 211
	RIGHT_BRACKET  shift 210
	.  error


state 177
	map_type:  MAP.LEFT_BRACKET data_type RIGHT_BRACKET data_type 

	LEFT_BRACKET  shift 212
	.  error


state 178
	fn_def_stmt:  FN identifier LEFT_PAREN.RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.fn_def_params RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.fn_def_params RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	RIGHT_PAREN  shift 213
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 216
	fn_def_param  goto 215
	fn_def_params  goto 214

state 179
	pkg_name:  pkg_name DOT.identifier 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 217

state 180
	import_stmt:  IMPORT pkg_name AS.identifier 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 218

state 181
	type_def_stmt:  TYPE identifier data_type.    (68)

	.  reduce 68 (src line 384)


state 182
	exprs:  exprs COMMA expr.    (88)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 88 (src line 482)


state 183
	exprs:  exprs.COMMA expr 
	assignment_stmt:  exprs EQ exprs.    (89)

	COMMA  shift 112
	.  reduce 89 (src line 489)


state 184
	if_elem:  IF expr stmt_block.    (113)

	.  reduce 113 (src line 604)


state 185
	exprs:  exprs COMMA.expr 
	list_literal:  LEFT_BRACKET exprs COMMA.RIGHT_BRACKET 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACKET  shift 219
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 182
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 186
	list_literal:  LEFT_BRACKET exprs EOLS_SPACE.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 220
	.  error


state 187
	expr_colon_expr:  expr_colon_expr COMMA.expr COLON expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 221
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 188
	map_literal:  LEFT_BRACE expr_colon_expr EOLS_SPACE.RIGHT_BRACE 

	RIGHT_BRACE  shift 222
	.  error


state 189
	expr_colon_expr:  expr COLON.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 223
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 190
	paren_expr:  LEFT_PAREN expr EOLS_SPACE.RIGHT_PAREN 

	RIGHT_PAREN  shift 224
	.  error


state 191
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	index_expr:  DOT LEFT_BRACKET expr.EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	EOL  shift 9
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 11 (src line 176)

	EOLS  goto 163
	EOLS_SPACE  goto 225

state 192
	stmt_block:  LEFT_BRACE stmts.RIGHT_BRACE 

	RIGHT_BRACE  shift 226
	.  error


state 193
	empty_block:  LEFT_BRACE RIGHT_BRACE.    (119)

	.  reduce 119 (src line 635)


state 194
	elif_elem:  ELIF expr stmt_block.    (116)

	.  reduce 116 (src line 620)


state 195
	for_stmt:  FOR for_init_elem SEMICOLON expr.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON expr.SEMICOLON stmt_block 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	SEMICOLON  shift 227
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 196
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 202
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 229
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 201
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 200
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 228
	slice_expr  goto 46

state 197
	for_stmt:  FOR SEMICOLON expr SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON expr SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 202
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 231
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 201
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 200
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 230
	slice_expr  goto 46

state 198
	for_stmt:  FOR SEMICOLON SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 232
	empty_block  goto 129

state 199
	for_stmt:  FOR SEMICOLON SEMICOLON stmt_block.    (110)

	.  reduce 110 (src line 587)


state 200
	exprs:  expr.    (87)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	for_loop_elem:  expr.    (101)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	LEFT_BRACE  reduce 101 (src line 557)
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 87 (src line 478)


state 201
	for_loop_elem:  assignment_stmt.    (102)

	.  reduce 102 (src line 557)


state 202
	stmt_block:  LEFT_BRACE.stmts RIGHT_BRACE 
	empty_block:  LEFT_BRACE.RIGHT_BRACE 
	map_literal:  LEFT_BRACE.RIGHT_BRACE 
	map_literal:  LEFT_BRACE.expr_colon_expr EOLS_SPACE RIGHT_BRACE 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACE  shift 233
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 30
	LET  shift 29
	IMPORT  shift 31
	TYPE  shift 32
	.  error

	stmts  goto 192
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	expr_colon_expr  goto 118
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 234
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	var_def_stmt  goto 17
	fn_def_stmt  goto 18
	import_stmt  goto 19
	type_def_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10

state 203
	function_args:  function_args COMMA.expr 
	function_args:  function_args COMMA.named_arg 
	call_expr:  expr LEFT_PAREN function_args COMMA.RIGHT_PAREN 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_PAREN  shift 237
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	named_arg  goto 236
	identifier  goto 146
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 235
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 204
	call_expr:  expr LEFT_PAREN function_args EOLS_SPACE.RIGHT_PAREN 

	RIGHT_PAREN  shift 238
	.  error


state 205
	named_arg:  identifier EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 239
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 206
	index_expr:  expr LEFT_BRACKET expr EOLS_SPACE.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 240
	.  error


state 207
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON.expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON.expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 11 (src line 176)

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 242
	map_literal  goto 39
	expr_or_empty  goto 241
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	EOLS  goto 163
	EOLS_SPACE  goto 162

state 208
	var_def_stmt:  LET identifier data_type EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 243
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 209
	var_def_stmt:  LET identifier EQ expr.    (63)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 63 (src line 325)


state 210
	list_type:  LEFT_BRACKET RIGHT_BRACKET.data_type 

	ID  shift 50
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  error

	identifier  goto 174
	data_type  goto 244
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 211
	array_type:  LEFT_BRACKET NUMBER.RIGHT_BRACKET data_type 

	RIGHT_BRACKET  shift 245
	.  error


state 212
	map_type:  MAP LEFT_BRACKET.data_type RIGHT_BRACKET data_type 

	ID  shift 50
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  error

	identifier  goto 174
	data_type  goto 246
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 213
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN.stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN.FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN.FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	LEFT_BRACE  shift 130
	FN_RET  shift 248
	.  error

	stmt_block  goto 247
	empty_block  goto 129

state 214
	fn_def_params:  fn_def_params.COMMA fn_def_param 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params.RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params.RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params.RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	COMMA  shift 249
	RIGHT_PAREN  shift 250
	.  error


state 215
	fn_def_params:  fn_def_param.    (77)

	.  reduce 77 (src line 429)


state 216
	fn_def_param:  identifier.    (69)
	fn_def_param:  identifier.COLON data_type 
	fn_def_param:  identifier.COLON VAR_ARG data_type 
	fn_def_param:  identifier.COLON VAR_ARG 
	fn_def_param:  identifier.EQ expr 
	fn_def_param:  identifier.COLON data_type EQ expr 

	COLON  shift 251
	EQ  shift 252
	.  reduce 69 (src line 391)


state 217
	pkg_name:  pkg_name DOT identifier.    (65)

	.  reduce 65 (src line 367)


state 218
	import_stmt:  IMPORT pkg_name AS identifier.    (67)

	.  reduce 67 (src line 377)


state 219
	list_literal:  LEFT_BRACKET exprs COMMA RIGHT_BRACKET.    (154)

	.  reduce 154 (src line 840)


state 220
	list_literal:  LEFT_BRACKET exprs EOLS_SPACE RIGHT_BRACKET.    (153)

	.  reduce 153 (src line 836)


state 221
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr_colon_expr COMMA expr.COLON expr 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  shift 253
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 222
	map_literal:  LEFT_BRACE expr_colon_expr EOLS_SPACE RIGHT_BRACE.    (159)

	.  reduce 159 (src line 864)


state 223
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr COLON expr.    (156)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 156 (src line 850)


state 224
	paren_expr:  LEFT_PAREN expr EOLS_SPACE RIGHT_PAREN.    (145)

	.  reduce 145 (src line 763)


state 225
	index_expr:  DOT LEFT_BRACKET expr EOLS_SPACE.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 254
	.  error


state 226
	stmt_block:  LEFT_BRACE stmts RIGHT_BRACE.    (118)

	.  reduce 118 (src line 628)


state 227
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 202
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 256
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 201
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 200
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 255
	slice_expr  goto 46

state 228
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 257
	empty_block  goto 129

state 229
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON stmt_block.    (106)

	.  reduce 106 (src line 571)


state 230
	for_stmt:  FOR SEMICOLON expr SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 258
	empty_block  goto 129

state 231
	for_stmt:  FOR SEMICOLON expr SEMICOLON stmt_block.    (108)

	.  reduce 108 (src line 579)


state 232
	for_stmt:  FOR SEMICOLON SEMICOLON for_loop_elem stmt_block.    (109)

	.  reduce 109 (src line 583)


state 233
	empty_block:  LEFT_BRACE RIGHT_BRACE.    (119)
	map_literal:  LEFT_BRACE RIGHT_BRACE.    (158)

	$end  reduce 119 (src line 635)
	SEMICOLON  reduce 119 (src line 635)
	EOF  reduce 119 (src line 635)
	RIGHT_BRACE  reduce 119 (src line 635)
	EOL  reduce 119 (src line 635)
	.  reduce 158 (src line 860)


state 234
	value_stmt:  expr.    (35)
	exprs:  expr.    (87)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr.COLON expr 

	COMMA  reduce 87 (src line 478)
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  shift 189
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	EQ  reduce 87 (src line 478)
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 35 (src line 246)


state 235
	in_expr:  expr.IN expr 
	function_args:  function_args COMMA expr.    (121)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 121 (src line 652)


state 236
	function_args:  function_args COMMA named_arg.    (122)

	.  reduce 122 (src line 656)


state 237
	call_expr:  expr LEFT_PAREN function_args COMMA RIGHT_PAREN.    (127)

	.  reduce 127 (src line 681)


state 238
	call_expr:  expr LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN.    (126)

	.  reduce 126 (src line 677)


state 239
	in_expr:  expr.IN expr 
	named_arg:  identifier EQ expr.    (125)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 125 (src line 670)


state 240
	index_expr:  expr LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET.    (146)

	.  reduce 146 (src line 770)


state 241
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty.COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 260
	COLON  shift 259
	.  error


state 242
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	expr_or_empty:  expr.    (149)
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 149 (src line 788)


state 243
	var_def_stmt:  LET identifier data_type EQ expr.    (61)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 61 (src line 317)


state 244
	list_type:  LEFT_BRACKET RIGHT_BRACKET data_type.    (58)

	.  reduce 58 (src line 299)


state 245
	array_type:  LEFT_BRACKET NUMBER RIGHT_BRACKET.data_type 

	ID  shift 50
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  error

	identifier  goto 174
	data_type  goto 261
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 246
	map_type:  MAP LEFT_BRACKET data_type.RIGHT_BRACKET data_type 

	RIGHT_BRACKET  shift 262
	.  error


state 247
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN stmt_block.    (81)

	.  reduce 81 (src line 452)


state 248
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET.data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET.LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	LEFT_PAREN  shift 264
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  error

	identifier  goto 174
	data_type  goto 263
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 249
	fn_def_params:  fn_def_params COMMA.fn_def_param 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 216
	fn_def_param  goto 265

state 250
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN.stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN.FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN.FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	LEFT_BRACE  shift 130
	FN_RET  shift 267
	.  error

	stmt_block  goto 266
	empty_block  goto 129

state 251
	fn_def_param:  identifier COLON.data_type 
	fn_def_param:  identifier COLON.VAR_ARG data_type 
	fn_def_param:  identifier COLON.VAR_ARG 
	fn_def_param:  identifier COLON.data_type EQ expr 

	ID  shift 50
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	VAR_ARG  shift 269
	.  error

	identifier  goto 174
	data_type  goto 268
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 252
	fn_def_param:  identifier EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 270
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 253
	expr_colon_expr:  expr_colon_expr COMMA expr COLON.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 271
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 254
	index_expr:  DOT LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET.    (147)

	.  reduce 147 (src line 774)


state 255
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 272
	empty_block  goto 129

state 256
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON stmt_block.    (104)

	.  reduce 104 (src line 563)


state 257
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON for_loop_elem stmt_block.    (105)

	.  reduce 105 (src line 567)


state 258
	for_stmt:  FOR SEMICOLON expr SEMICOLON for_loop_elem stmt_block.    (107)

	.  reduce 107 (src line 575)


state 259
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON.expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 11 (src line 176)

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 242
	map_literal  goto 39
	expr_or_empty  goto 273
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	EOLS  goto 163
	EOLS_SPACE  goto 162

state 260
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET.    (152)

	.  reduce 152 (src line 803)


state 261
	array_type:  LEFT_BRACKET NUMBER RIGHT_BRACKET data_type.    (59)

	.  reduce 59 (src line 305)


state 262
	map_type:  MAP LEFT_BRACKET data_type RIGHT_BRACKET.data_type 

	ID  shift 50
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  error

	identifier  goto 174
	data_type  goto 274
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 263
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET data_type.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 275
	empty_block  goto 129

state 264
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN.fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  error

	fn_ret_types_multi  goto 276
	identifier  goto 174
	data_type  goto 277
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 265
	fn_def_params:  fn_def_params COMMA fn_def_param.    (78)

	.  reduce 78 (src line 433)


state 266
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN stmt_block.    (84)

	.  reduce 84 (src line 464)


state 267
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET.data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET.LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	LEFT_PAREN  shift 279
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  error

	identifier  goto 174
	data_type  goto 278
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 268
	fn_def_param:  identifier COLON data_type.    (70)
	fn_def_param:  identifier COLON data_type.EQ expr 

	EQ  shift 280
	.  reduce 70 (src line 395)


state 269
	fn_def_param:  identifier COLON VAR_ARG.data_type 
	fn_def_param:  identifier COLON VAR_ARG.    (72)

	ID  shift 50
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  reduce 72 (src line 403)

	identifier  goto 174
	data_type  goto 281
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 270
	fn_def_param:  identifier EQ expr.    (73)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 73 (src line 407)


state 271
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr_colon_expr COMMA expr COLON expr.    (157)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 157 (src line 854)


state 272
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON for_loop_elem stmt_block.    (103)

	.  reduce 103 (src line 559)


state 273
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 282
	.  error


state 274
	map_type:  MAP LEFT_BRACKET data_type RIGHT_BRACKET data_type.    (60)

	.  reduce 60 (src line 311)


state 275
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET data_type stmt_block.    (82)

	.  reduce 82 (src line 456)


state 276
	fn_ret_types_multi:  fn_ret_types_multi.COMMA data_type 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi.RIGHT_PAREN stmt_block 

	COMMA  shift 283
	RIGHT_PAREN  shift 284
	.  error


state 277
	fn_ret_types_multi:  data_type.    (79)

	.  reduce 79 (src line 440)


state 278
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 285
	empty_block  goto 129

state 279
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN.fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  error

	fn_ret_types_multi  goto 286
	identifier  goto 174
	data_type  goto 277
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 280
	fn_def_param:  identifier COLON data_type EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 287
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 281
	fn_def_param:  identifier COLON VAR_ARG data_type.    (71)

	.  reduce 71 (src line 399)


state 282
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET.    (151)

	.  reduce 151 (src line 799)


state 283
	fn_ret_types_multi:  fn_ret_types_multi COMMA.data_type 

	ID  shift 50
	LEFT_BRACKET  shift 176
	QUOTED_STRING  shift 51
	STR  shift 169
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 177
	ANY  shift 171
	.  error

	identifier  goto 174
	data_type  goto 288
	list_type  goto 172
	array_type  goto 175
	map_type  goto 173

state 284
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 289
	empty_block  goto 129

state 285
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type stmt_block.    (85)

	.  reduce 85 (src line 468)


state 286
	fn_ret_types_multi:  fn_ret_types_multi.COMMA data_type 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi.RIGHT_PAREN stmt_block 

	COMMA  shift 283
	RIGHT_PAREN  shift 290
	.  error


state 287
	fn_def_param:  identifier COLON data_type EQ expr.    (74)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 74 (src line 411)


state 288
	fn_ret_types_multi:  fn_ret_types_multi COMMA data_type.    (80)

	.  reduce 80 (src line 444)


state 289
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block.    (83)

	.  reduce 83 (src line 460)


state 290
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 291
	empty_block  goto 129

state 291
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block.    (86)

	.  reduce 86 (src line 472)


86 terminals, 55 nonterminals
169 grammar rules, 292/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
154 working sets used
memory: parser 1326/240000
250 extra closures
1866 shift entries, 13 exceptions
188 goto entries
881 entries saved by goto default
Optimizer space used: output 1348/240000
1348 table entries, 497 zero
maximum spread: 84, maximum offset: 290
