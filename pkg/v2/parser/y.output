
state 0
	$accept: .start $end 

	error  shift 3
	START_STMTS  shift 2
	.  error

	start  goto 1

state 1
	$accept:  start.$end 
	start:  start.EOF 

	$end  accept
	EOF  shift 4
	.  error


state 2
	start:  START_STMTS.stmts 
	start:  START_STMTS.EOLS 
	start:  START_STMTS.EOLS stmts 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 30
	LET  shift 29
	IMPORT  shift 31
	TYPE  shift 32
	.  error

	stmts  goto 5
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	var_def_stmt  goto 17
	fn_def_stmt  goto 18
	import_stmt  goto 19
	type_def_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10
	EOLS  goto 6

state 3
	start:  error.    (16)

	.  reduce 16 (src line 189)


state 4
	start:  start EOF.    (15)

	.  reduce 15 (src line 188)


state 5
	start:  START_STMTS stmts.    (12)

	.  reduce 12 (src line 176)


state 6
	EOLS:  EOLS.EOL 
	start:  START_STMTS EOLS.    (13)
	start:  START_STMTS EOLS.stmts 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 66
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 30
	LET  shift 29
	IMPORT  shift 31
	TYPE  shift 32
	.  reduce 13 (src line 180)

	stmts  goto 67
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	var_def_stmt  goto 17
	fn_def_stmt  goto 18
	import_stmt  goto 19
	type_def_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10

state 7
	stmts:  stmts_list.stmt 
	stmts:  stmts_list.    (18)
	stmts_list:  stmts_list.stmt sep 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 30
	LET  shift 29
	IMPORT  shift 31
	TYPE  shift 32
	.  reduce 18 (src line 205)

	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 68
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	var_def_stmt  goto 17
	fn_def_stmt  goto 18
	import_stmt  goto 19
	type_def_stmt  goto 20
	return_stmt  goto 21

state 8
	stmts:  stmt.    (19)
	stmts_list:  stmt.sep 

	SEMICOLON  shift 70
	EOL  shift 71
	.  reduce 19 (src line 206)

	sep  goto 69

state 9
	EOLS:  EOL.    (8)

	.  reduce 8 (src line 168)


state 10
	sem:  sem.EOL 
	sem:  sem.SEMICOLON 
	stmts_list:  sem.    (21)

	SEMICOLON  shift 73
	EOL  shift 72
	.  reduce 21 (src line 216)


state 11
	stmt:  ifelse_stmt.    (23)

	.  reduce 23 (src line 228)


state 12
	stmt:  for_in_stmt.    (24)

	.  reduce 24 (src line 229)


state 13
	stmt:  for_stmt.    (25)

	.  reduce 25 (src line 230)


state 14
	stmt:  continue_stmt.    (26)

	.  reduce 26 (src line 231)


state 15
	stmt:  break_stmt.    (27)

	.  reduce 27 (src line 232)


state 16
	stmt:  value_stmt.    (28)

	.  reduce 28 (src line 233)


state 17
	stmt:  var_def_stmt.    (29)

	.  reduce 29 (src line 234)


state 18
	stmt:  fn_def_stmt.    (30)

	.  reduce 30 (src line 235)


state 19
	stmt:  import_stmt.    (31)

	.  reduce 31 (src line 236)


state 20
	stmt:  type_def_stmt.    (32)

	.  reduce 32 (src line 237)


state 21
	stmt:  return_stmt.    (33)

	.  reduce 33 (src line 238)


state 22
	stmt:  assignment_stmt.    (34)

	.  reduce 34 (src line 239)


state 23
	sem:  SEMICOLON.    (5)

	.  reduce 5 (src line 163)


state 24
	ifelse_stmt:  if_elif_list.    (118)
	ifelse_stmt:  if_elif_list.ELSE stmt_block 
	if_elif_list:  if_elif_list.elif_elem 

	ELIF  shift 76
	ELSE  shift 74
	.  reduce 118 (src line 581)

	elif_elem  goto 75

state 25
	for_in_stmt:  FOR.in_expr stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON expr SEMICOLON stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON SEMICOLON stmt_block 
	for_stmt:  FOR.SEMICOLON expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.SEMICOLON expr SEMICOLON stmt_block 
	for_stmt:  FOR.SEMICOLON SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.SEMICOLON SEMICOLON stmt_block 

	SEMICOLON  shift 79
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	LET  shift 29
	.  error

	exprs  goto 34
	assignment_stmt  goto 81
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 77
	expr  goto 80
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_init_elem  goto 78
	slice_expr  goto 46
	var_def_stmt  goto 82

state 26
	continue_stmt:  CONTINUE.    (103)

	.  reduce 103 (src line 516)


state 27
	break_stmt:  BREAK.    (102)

	.  reduce 102 (src line 509)


state 28
	value_stmt:  expr.    (35)
	exprs:  expr.    (93)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	COMMA  reduce 93 (src line 458)
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	EQ  reduce 93 (src line 458)
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 35 (src line 243)


state 29
	var_def_stmt:  LET.identifier data_type EQ expr 
	var_def_stmt:  LET.identifier data_type 
	var_def_stmt:  LET.identifier EQ expr 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 105

state 30
	fn_def_stmt:  FN.identifier LEFT_PAREN RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN fn_def_params RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 106

state 31
	import_stmt:  IMPORT.pkg_name 
	import_stmt:  IMPORT.pkg_name AS identifier 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	pkg_name  goto 107
	identifier  goto 108

state 32
	type_def_stmt:  TYPE.identifier data_type 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 109

state 33
	return_stmt:  RETURN.    (81)
	return_stmt:  RETURN.exprs 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 81 (src line 410)

	exprs  goto 110
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 111
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 34
	exprs:  exprs.COMMA expr 
	assignment_stmt:  exprs.EQ exprs 

	COMMA  shift 112
	EQ  shift 113
	.  error


state 35
	if_elif_list:  if_elem.    (121)

	.  reduce 121 (src line 597)


state 36
	expr:  identifier.    (36)

	.  reduce 36 (src line 247)


state 37
	expr:  basic_literal.    (37)

	.  reduce 37 (src line 248)


state 38
	expr:  list_literal.    (38)

	.  reduce 38 (src line 249)


state 39
	expr:  map_literal.    (39)

	.  reduce 39 (src line 250)


state 40
	expr:  paren_expr.    (40)

	.  reduce 40 (src line 252)


state 41
	expr:  unary_expr.    (41)

	.  reduce 41 (src line 253)


state 42
	expr:  conditional_expr.    (42)

	.  reduce 42 (src line 254)


state 43
	expr:  arithmeticExpr.    (43)

	.  reduce 43 (src line 255)


state 44
	expr:  attr_expr.    (44)

	.  reduce 44 (src line 256)


state 45
	expr:  index_expr.    (45)

	.  reduce 45 (src line 257)


state 46
	expr:  slice_expr.    (46)

	.  reduce 46 (src line 258)


state 47
	expr:  in_expr.    (47)

	.  reduce 47 (src line 259)


state 48
	expr:  call_expr.    (48)

	.  reduce 48 (src line 260)


state 49
	if_elem:  IF.expr stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 114
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 50
	identifier:  ID.    (166)

	.  reduce 166 (src line 852)


state 51
	identifier:  QUOTED_STRING.    (167)

	.  reduce 167 (src line 856)


state 52
	basic_literal:  NUMBER.    (168)

	.  reduce 168 (src line 863)


state 53
	basic_literal:  TRUE.    (169)

	.  reduce 169 (src line 867)


state 54
	basic_literal:  FALSE.    (170)

	.  reduce 170 (src line 871)


state 55
	basic_literal:  STRING.    (171)

	.  reduce 171 (src line 875)


state 56
	basic_literal:  MULTILINE_STRING.    (172)

	.  reduce 172 (src line 880)


state 57
	basic_literal:  NIL.    (173)

	.  reduce 173 (src line 885)


state 58
	basic_literal:  NULL.    (174)

	.  reduce 174 (src line 889)


state 59
	list_literal:  LEFT_BRACKET.exprs EOLS_SPACE RIGHT_BRACKET 
	list_literal:  LEFT_BRACKET.exprs COMMA RIGHT_BRACKET 
	list_literal:  LEFT_BRACKET.RIGHT_BRACKET 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACKET  shift 116
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	exprs  goto 115
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 111
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 60
	map_literal:  LEFT_BRACE.RIGHT_BRACE 
	map_literal:  LEFT_BRACE.expr_colon_expr EOLS_SPACE RIGHT_BRACE 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACE  shift 117
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	expr_colon_expr  goto 118
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 119
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 61
	paren_expr:  LEFT_PAREN.expr EOLS_SPACE RIGHT_PAREN 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 120
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 62
	unary_expr:  ADD.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 121
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 63
	unary_expr:  SUB.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 122
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 64
	unary_expr:  NOT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 123
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 65
	index_expr:  DOT.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 

	LEFT_BRACKET  shift 124
	.  error


state 66
	EOLS:  EOLS EOL.    (9)

	.  reduce 9 (src line 169)


state 67
	start:  START_STMTS EOLS stmts.    (14)

	.  reduce 14 (src line 184)


state 68
	stmts:  stmts_list stmt.    (17)
	stmts_list:  stmts_list stmt.sep 

	SEMICOLON  shift 70
	EOL  shift 71
	.  reduce 17 (src line 199)

	sep  goto 125

state 69
	sep:  sep.SEMICOLON 
	sep:  sep.EOL 
	stmts_list:  stmt sep.    (20)

	SEMICOLON  shift 126
	EOL  shift 127
	.  reduce 20 (src line 212)


state 70
	sep:  SEMICOLON.    (1)

	.  reduce 1 (src line 157)


state 71
	sep:  EOL.    (2)

	.  reduce 2 (src line 158)


state 72
	sem:  sem EOL.    (6)

	.  reduce 6 (src line 164)


state 73
	sem:  sem SEMICOLON.    (7)

	.  reduce 7 (src line 165)


state 74
	ifelse_stmt:  if_elif_list ELSE.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 128
	empty_block  goto 129

state 75
	if_elif_list:  if_elif_list elif_elem.    (122)

	.  reduce 122 (src line 601)


state 76
	elif_elem:  ELIF.expr stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 131
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 77
	expr:  in_expr.    (47)
	for_in_stmt:  FOR in_expr.stmt_block 

	LEFT_BRACE  shift 130
	.  reduce 47 (src line 259)

	stmt_block  goto 132
	empty_block  goto 129

state 78
	for_stmt:  FOR for_init_elem.SEMICOLON expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem.SEMICOLON expr SEMICOLON stmt_block 
	for_stmt:  FOR for_init_elem.SEMICOLON SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem.SEMICOLON SEMICOLON stmt_block 

	SEMICOLON  shift 133
	.  error


state 79
	for_stmt:  FOR SEMICOLON.expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON.expr SEMICOLON stmt_block 
	for_stmt:  FOR SEMICOLON.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON.SEMICOLON stmt_block 

	SEMICOLON  shift 135
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 134
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 80
	exprs:  expr.    (93)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	in_expr:  expr.IN expr 
	for_init_elem:  expr.    (105)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	SEMICOLON  reduce 105 (src line 541)
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 93 (src line 458)


state 81
	for_init_elem:  assignment_stmt.    (106)

	.  reduce 106 (src line 541)


state 82
	for_init_elem:  var_def_stmt.    (107)

	.  reduce 107 (src line 541)


state 83
	assignment_stmt:  expr ADD_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 136
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 84
	assignment_stmt:  expr SUB_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 137
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 85
	assignment_stmt:  expr MUL_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 138
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 86
	assignment_stmt:  expr DIV_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 139
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 87
	assignment_stmt:  expr MOD_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 140
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 88
	in_expr:  expr IN.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 141
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 89
	call_expr:  expr LEFT_PAREN.function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr LEFT_PAREN.function_args COMMA RIGHT_PAREN 
	call_expr:  expr LEFT_PAREN.RIGHT_PAREN 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_PAREN  shift 143
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	function_args  goto 142
	call_expr  goto 48
	named_arg  goto 144
	identifier  goto 146
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 145
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 90
	conditional_expr:  expr GTE.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 147
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 91
	conditional_expr:  expr GT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 148
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 92
	conditional_expr:  expr OR.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 149
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 93
	conditional_expr:  expr AND.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 150
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 94
	conditional_expr:  expr LT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 151
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 95
	conditional_expr:  expr LTE.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 152
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 96
	conditional_expr:  expr NEQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 153
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 97
	conditional_expr:  expr EQEQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 154
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 98
	arithmeticExpr:  expr ADD.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 155
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 99
	arithmeticExpr:  expr SUB.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 156
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 100
	arithmeticExpr:  expr MUL.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 157
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 101
	arithmeticExpr:  expr DIV.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 158
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 102
	arithmeticExpr:  expr MOD.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 159
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 103
	index_expr:  expr LEFT_BRACKET.expr EOLS_SPACE RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET.expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET.expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 11 (src line 173)

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 160
	map_literal  goto 39
	expr_or_empty  goto 161
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	EOLS  goto 163
	EOLS_SPACE  goto 162

state 104
	attr_expr:  expr DOT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 164
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 105
	var_def_stmt:  LET identifier.data_type EQ expr 
	var_def_stmt:  LET identifier.data_type 
	var_def_stmt:  LET identifier.EQ expr 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	EQ  shift 166
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 165
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 106
	fn_def_stmt:  FN identifier.LEFT_PAREN RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN fn_def_params RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	LEFT_PAREN  shift 180
	.  error


state 107
	pkg_name:  pkg_name.DOT identifier 
	import_stmt:  IMPORT pkg_name.    (73)
	import_stmt:  IMPORT pkg_name.AS identifier 

	DOT  shift 181
	AS  shift 182
	.  reduce 73 (src line 369)


state 108
	pkg_name:  identifier.    (71)

	.  reduce 71 (src line 359)


state 109
	type_def_stmt:  TYPE identifier.data_type 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 183
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 110
	return_stmt:  RETURN exprs.    (82)
	exprs:  exprs.COMMA expr 

	COMMA  shift 112
	.  reduce 82 (src line 414)


state 111
	exprs:  expr.    (93)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 93 (src line 458)


state 112
	exprs:  exprs COMMA.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 184
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 113
	assignment_stmt:  exprs EQ.exprs 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	exprs  goto 185
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 111
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 114
	in_expr:  expr.IN expr 
	if_elem:  IF expr.stmt_block 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	LEFT_BRACE  shift 130
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error

	stmt_block  goto 186
	empty_block  goto 129

state 115
	exprs:  exprs.COMMA expr 
	list_literal:  LEFT_BRACKET exprs.EOLS_SPACE RIGHT_BRACKET 
	list_literal:  LEFT_BRACKET exprs.COMMA RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	COMMA  shift 187
	EOL  shift 9
	.  reduce 11 (src line 173)

	EOLS  goto 163
	EOLS_SPACE  goto 188

state 116
	list_literal:  LEFT_BRACKET RIGHT_BRACKET.    (161)

	.  reduce 161 (src line 825)


state 117
	map_literal:  LEFT_BRACE RIGHT_BRACE.    (164)

	.  reduce 164 (src line 841)


state 118
	expr_colon_expr:  expr_colon_expr.COMMA expr COLON expr 
	map_literal:  LEFT_BRACE expr_colon_expr.EOLS_SPACE RIGHT_BRACE 
	EOLS_SPACE: .    (11)

	COMMA  shift 189
	EOL  shift 9
	.  reduce 11 (src line 173)

	EOLS  goto 163
	EOLS_SPACE  goto 190

state 119
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr.COLON expr 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  shift 191
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 120
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	paren_expr:  LEFT_PAREN expr.EOLS_SPACE RIGHT_PAREN 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	EOL  shift 9
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 11 (src line 173)

	EOLS  goto 163
	EOLS_SPACE  goto 192

state 121
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	unary_expr:  ADD expr.    (135)
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 135 (src line 672)


state 122
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	unary_expr:  SUB expr.    (136)
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 136 (src line 676)


state 123
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	unary_expr:  NOT expr.    (137)
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 137 (src line 680)


state 124
	index_expr:  DOT LEFT_BRACKET.expr EOLS_SPACE RIGHT_BRACKET 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 193
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 125
	sep:  sep.SEMICOLON 
	sep:  sep.EOL 
	stmts_list:  stmts_list stmt sep.    (22)

	SEMICOLON  shift 126
	EOL  shift 127
	.  reduce 22 (src line 220)


state 126
	sep:  sep SEMICOLON.    (3)

	.  reduce 3 (src line 159)


state 127
	sep:  sep EOL.    (4)

	.  reduce 4 (src line 160)


state 128
	ifelse_stmt:  if_elif_list ELSE stmt_block.    (119)

	.  reduce 119 (src line 585)


state 129
	stmt_block:  empty_block.    (124)

	.  reduce 124 (src line 614)


state 130
	stmt_block:  LEFT_BRACE.stmts RIGHT_BRACE 
	empty_block:  LEFT_BRACE.RIGHT_BRACE 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACE  shift 195
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 30
	LET  shift 29
	IMPORT  shift 31
	TYPE  shift 32
	.  error

	stmts  goto 194
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	var_def_stmt  goto 17
	fn_def_stmt  goto 18
	import_stmt  goto 19
	type_def_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10

state 131
	in_expr:  expr.IN expr 
	elif_elem:  ELIF expr.stmt_block 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	LEFT_BRACE  shift 130
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error

	stmt_block  goto 196
	empty_block  goto 129

state 132
	for_in_stmt:  FOR in_expr stmt_block.    (104)

	.  reduce 104 (src line 527)


state 133
	for_stmt:  FOR for_init_elem SEMICOLON.expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON.expr SEMICOLON stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON.SEMICOLON stmt_block 

	SEMICOLON  shift 198
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 197
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 134
	in_expr:  expr.IN expr 
	for_stmt:  FOR SEMICOLON expr.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON expr.SEMICOLON stmt_block 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	SEMICOLON  shift 199
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 135
	for_stmt:  FOR SEMICOLON SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 204
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 201
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 203
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 202
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 200
	slice_expr  goto 46

state 136
	assignment_stmt:  expr ADD_EQ expr.    (96)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 96 (src line 474)


state 137
	assignment_stmt:  expr SUB_EQ expr.    (97)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 97 (src line 479)


state 138
	assignment_stmt:  expr MUL_EQ expr.    (98)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 98 (src line 484)


state 139
	assignment_stmt:  expr DIV_EQ expr.    (99)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 99 (src line 489)


state 140
	assignment_stmt:  expr MOD_EQ expr.    (100)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 100 (src line 494)


state 141
	in_expr:  expr.IN expr 
	in_expr:  expr IN expr.    (101)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	DOT  shift 104
	.  reduce 101 (src line 502)


state 142
	function_args:  function_args.COMMA expr 
	function_args:  function_args.COMMA named_arg 
	call_expr:  expr LEFT_PAREN function_args.EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr LEFT_PAREN function_args.COMMA RIGHT_PAREN 
	EOLS_SPACE: .    (11)

	COMMA  shift 205
	EOL  shift 9
	.  reduce 11 (src line 173)

	EOLS  goto 163
	EOLS_SPACE  goto 206

state 143
	call_expr:  expr LEFT_PAREN RIGHT_PAREN.    (134)

	.  reduce 134 (src line 666)


state 144
	function_args:  named_arg.    (129)

	.  reduce 129 (src line 641)


state 145
	in_expr:  expr.IN expr 
	function_args:  expr.    (130)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 130 (src line 645)


state 146
	expr:  identifier.    (36)
	named_arg:  identifier.EQ expr 

	EQ  shift 207
	.  reduce 36 (src line 247)


state 147
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr GTE expr.    (138)
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 138 (src line 686)


state 148
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr GT expr.    (139)
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 139 (src line 690)


state 149
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr OR expr.    (140)
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	DOT  shift 104
	IN  shift 88
	.  reduce 140 (src line 694)


state 150
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr AND expr.    (141)
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	DOT  shift 104
	IN  shift 88
	.  reduce 141 (src line 698)


state 151
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr LT expr.    (142)
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 142 (src line 702)


state 152
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr LTE expr.    (143)
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 143 (src line 706)


state 153
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr NEQ expr.    (144)
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 144 (src line 710)


state 154
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	conditional_expr:  expr EQEQ expr.    (145)
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 145 (src line 714)


state 155
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr ADD expr.    (146)
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 146 (src line 721)


state 156
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr SUB expr.    (147)
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 147 (src line 725)


state 157
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr MUL expr.    (148)
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 148 (src line 729)


state 158
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr DIV expr.    (149)
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 149 (src line 733)


state 159
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	arithmeticExpr:  expr MOD expr.    (150)
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 150 (src line 737)


state 160
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	index_expr:  expr LEFT_BRACKET expr.EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	expr_or_empty:  expr.    (155)
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  reduce 155 (src line 769)
	EOL  shift 9
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 11 (src line 173)

	EOLS  goto 163
	EOLS_SPACE  goto 208

state 161
	slice_expr:  expr LEFT_BRACKET expr_or_empty.COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET expr_or_empty.COLON expr_or_empty RIGHT_BRACKET 

	COLON  shift 209
	.  error


state 162
	expr_or_empty:  EOLS_SPACE.    (156)

	.  reduce 156 (src line 773)


state 163
	EOLS:  EOLS.EOL 
	EOLS_SPACE:  EOLS.    (10)

	EOL  shift 66
	.  reduce 10 (src line 172)


state 164
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	attr_expr:  expr DOT expr.    (154)
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	.  reduce 154 (src line 762)


state 165
	var_def_stmt:  LET identifier data_type.EQ expr 
	var_def_stmt:  LET identifier data_type.    (63)

	EQ  shift 210
	.  reduce 63 (src line 317)


state 166
	var_def_stmt:  LET identifier EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 211
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 167
	data_type:  INT.    (49)

	.  reduce 49 (src line 268)


state 168
	data_type:  FLOAT.    (50)

	.  reduce 50 (src line 272)


state 169
	data_type:  STRING.    (51)

	.  reduce 51 (src line 276)


state 170
	data_type:  BOOL.    (52)

	.  reduce 52 (src line 280)


state 171
	data_type:  ANY.    (53)

	.  reduce 53 (src line 284)


state 172
	data_type:  list_type.    (54)

	.  reduce 54 (src line 288)


state 173
	data_type:  map_type.    (55)

	.  reduce 55 (src line 289)


state 174
	data_type:  fn_type.    (56)

	.  reduce 56 (src line 290)


state 175
	data_type:  identifier.    (57)

	.  reduce 57 (src line 291)


state 176
	data_type:  array_type.    (58)

	.  reduce 58 (src line 292)


state 177
	list_type:  LEFT_BRACKET.RIGHT_BRACKET data_type 
	array_type:  LEFT_BRACKET.NUMBER RIGHT_BRACKET data_type 

	NUMBER  shift 213
	RIGHT_BRACKET  shift 212
	.  error


state 178
	map_type:  MAP.LEFT_BRACKET data_type RIGHT_BRACKET data_type 

	LEFT_BRACKET  shift 214
	.  error


state 179
	fn_type:  FN.LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE 
	fn_type:  FN.LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET data_type 
	fn_type:  FN.LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 
	fn_type:  FN.LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE 
	fn_type:  FN.LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET data_type 
	fn_type:  FN.LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 

	LEFT_PAREN  shift 215
	.  error


state 180
	fn_def_stmt:  FN identifier LEFT_PAREN.RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.fn_def_params RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.fn_def_params RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	RIGHT_PAREN  shift 216
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 219
	fn_def_params  goto 217
	fn_def_param  goto 218

state 181
	pkg_name:  pkg_name DOT.identifier 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 220

state 182
	import_stmt:  IMPORT pkg_name AS.identifier 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 221

state 183
	type_def_stmt:  TYPE identifier data_type.    (75)

	.  reduce 75 (src line 380)


state 184
	exprs:  exprs COMMA expr.    (94)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 94 (src line 462)


state 185
	exprs:  exprs.COMMA expr 
	assignment_stmt:  exprs EQ exprs.    (95)

	COMMA  shift 112
	.  reduce 95 (src line 469)


state 186
	if_elem:  IF expr stmt_block.    (120)

	.  reduce 120 (src line 591)


state 187
	exprs:  exprs COMMA.expr 
	list_literal:  LEFT_BRACKET exprs COMMA.RIGHT_BRACKET 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACKET  shift 222
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 184
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 188
	list_literal:  LEFT_BRACKET exprs EOLS_SPACE.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 223
	.  error


state 189
	expr_colon_expr:  expr_colon_expr COMMA.expr COLON expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 224
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 190
	map_literal:  LEFT_BRACE expr_colon_expr EOLS_SPACE.RIGHT_BRACE 

	RIGHT_BRACE  shift 225
	.  error


state 191
	expr_colon_expr:  expr COLON.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 226
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 192
	paren_expr:  LEFT_PAREN expr EOLS_SPACE.RIGHT_PAREN 

	RIGHT_PAREN  shift 227
	.  error


state 193
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	index_expr:  DOT LEFT_BRACKET expr.EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	EOL  shift 9
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 11 (src line 173)

	EOLS  goto 163
	EOLS_SPACE  goto 228

state 194
	stmt_block:  LEFT_BRACE stmts.RIGHT_BRACE 

	RIGHT_BRACE  shift 229
	.  error


state 195
	empty_block:  LEFT_BRACE RIGHT_BRACE.    (126)

	.  reduce 126 (src line 622)


state 196
	elif_elem:  ELIF expr stmt_block.    (123)

	.  reduce 123 (src line 607)


state 197
	in_expr:  expr.IN expr 
	for_stmt:  FOR for_init_elem SEMICOLON expr.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON expr.SEMICOLON stmt_block 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	SEMICOLON  shift 230
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 198
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 204
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 232
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 203
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 202
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 231
	slice_expr  goto 46

state 199
	for_stmt:  FOR SEMICOLON expr SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON expr SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 204
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 234
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 203
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 202
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 233
	slice_expr  goto 46

state 200
	for_stmt:  FOR SEMICOLON SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 235
	empty_block  goto 129

state 201
	for_stmt:  FOR SEMICOLON SEMICOLON stmt_block.    (117)

	.  reduce 117 (src line 574)


state 202
	exprs:  expr.    (93)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	in_expr:  expr.IN expr 
	for_loop_elem:  expr.    (108)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	LEFT_BRACE  reduce 108 (src line 544)
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 93 (src line 458)


state 203
	for_loop_elem:  assignment_stmt.    (109)

	.  reduce 109 (src line 544)


state 204
	stmt_block:  LEFT_BRACE.stmts RIGHT_BRACE 
	empty_block:  LEFT_BRACE.RIGHT_BRACE 
	map_literal:  LEFT_BRACE.RIGHT_BRACE 
	map_literal:  LEFT_BRACE.expr_colon_expr EOLS_SPACE RIGHT_BRACE 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACE  shift 236
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 30
	LET  shift 29
	IMPORT  shift 31
	TYPE  shift 32
	.  error

	stmts  goto 194
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	expr_colon_expr  goto 118
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 237
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	var_def_stmt  goto 17
	fn_def_stmt  goto 18
	import_stmt  goto 19
	type_def_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10

state 205
	function_args:  function_args COMMA.expr 
	function_args:  function_args COMMA.named_arg 
	call_expr:  expr LEFT_PAREN function_args COMMA.RIGHT_PAREN 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_PAREN  shift 240
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	named_arg  goto 239
	identifier  goto 146
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 238
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 206
	call_expr:  expr LEFT_PAREN function_args EOLS_SPACE.RIGHT_PAREN 

	RIGHT_PAREN  shift 241
	.  error


state 207
	named_arg:  identifier EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 242
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 208
	index_expr:  expr LEFT_BRACKET expr EOLS_SPACE.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 243
	.  error


state 209
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON.expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON.expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 11 (src line 173)

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 245
	map_literal  goto 39
	expr_or_empty  goto 244
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	EOLS  goto 163
	EOLS_SPACE  goto 162

state 210
	var_def_stmt:  LET identifier data_type EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 246
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 211
	var_def_stmt:  LET identifier EQ expr.    (64)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 64 (src line 321)


state 212
	list_type:  LEFT_BRACKET RIGHT_BRACKET.data_type 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 247
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 213
	array_type:  LEFT_BRACKET NUMBER.RIGHT_BRACKET data_type 

	RIGHT_BRACKET  shift 248
	.  error


state 214
	map_type:  MAP LEFT_BRACKET.data_type RIGHT_BRACKET data_type 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 249
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 215
	fn_type:  FN LEFT_PAREN.RIGHT_PAREN LEFT_BRACE RIGHT_BRACE 
	fn_type:  FN LEFT_PAREN.RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET data_type 
	fn_type:  FN LEFT_PAREN.RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 
	fn_type:  FN LEFT_PAREN.fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE 
	fn_type:  FN LEFT_PAREN.fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET data_type 
	fn_type:  FN LEFT_PAREN.fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 

	ID  shift 50
	RIGHT_PAREN  shift 250
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 219
	fn_def_params  goto 251
	fn_def_param  goto 218

state 216
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN.stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN.FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN.FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	LEFT_BRACE  shift 130
	FN_RET  shift 253
	.  error

	stmt_block  goto 252
	empty_block  goto 129

state 217
	fn_def_params:  fn_def_params.COMMA fn_def_param 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params.RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params.RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params.RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	COMMA  shift 254
	RIGHT_PAREN  shift 255
	.  error


state 218
	fn_def_params:  fn_def_param.    (83)

	.  reduce 83 (src line 421)


state 219
	fn_def_param:  identifier.    (76)
	fn_def_param:  identifier.COLON data_type 
	fn_def_param:  identifier.COLON VAR_ARG data_type 
	fn_def_param:  identifier.EQ expr 
	fn_def_param:  identifier.COLON data_type EQ expr 

	COLON  shift 256
	EQ  shift 257
	.  reduce 76 (src line 387)


state 220
	pkg_name:  pkg_name DOT identifier.    (72)

	.  reduce 72 (src line 363)


state 221
	import_stmt:  IMPORT pkg_name AS identifier.    (74)

	.  reduce 74 (src line 373)


state 222
	list_literal:  LEFT_BRACKET exprs COMMA RIGHT_BRACKET.    (160)

	.  reduce 160 (src line 821)


state 223
	list_literal:  LEFT_BRACKET exprs EOLS_SPACE RIGHT_BRACKET.    (159)

	.  reduce 159 (src line 817)


state 224
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr_colon_expr COMMA expr.COLON expr 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  shift 258
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 225
	map_literal:  LEFT_BRACE expr_colon_expr EOLS_SPACE RIGHT_BRACE.    (165)

	.  reduce 165 (src line 845)


state 226
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr COLON expr.    (162)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 162 (src line 831)


state 227
	paren_expr:  LEFT_PAREN expr EOLS_SPACE RIGHT_PAREN.    (151)

	.  reduce 151 (src line 744)


state 228
	index_expr:  DOT LEFT_BRACKET expr EOLS_SPACE.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 259
	.  error


state 229
	stmt_block:  LEFT_BRACE stmts RIGHT_BRACE.    (125)

	.  reduce 125 (src line 615)


state 230
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 204
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 261
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 203
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 202
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 260
	slice_expr  goto 46

state 231
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 262
	empty_block  goto 129

state 232
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON stmt_block.    (113)

	.  reduce 113 (src line 558)


state 233
	for_stmt:  FOR SEMICOLON expr SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 263
	empty_block  goto 129

state 234
	for_stmt:  FOR SEMICOLON expr SEMICOLON stmt_block.    (115)

	.  reduce 115 (src line 566)


state 235
	for_stmt:  FOR SEMICOLON SEMICOLON for_loop_elem stmt_block.    (116)

	.  reduce 116 (src line 570)


state 236
	empty_block:  LEFT_BRACE RIGHT_BRACE.    (126)
	map_literal:  LEFT_BRACE RIGHT_BRACE.    (164)

	$end  reduce 126 (src line 622)
	SEMICOLON  reduce 126 (src line 622)
	EOF  reduce 126 (src line 622)
	RIGHT_BRACE  reduce 126 (src line 622)
	EOL  reduce 126 (src line 622)
	.  reduce 164 (src line 841)


state 237
	value_stmt:  expr.    (35)
	exprs:  expr.    (93)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr.COLON expr 

	COMMA  reduce 93 (src line 458)
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  shift 191
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	EQ  reduce 93 (src line 458)
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 35 (src line 243)


state 238
	in_expr:  expr.IN expr 
	function_args:  function_args COMMA expr.    (127)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 127 (src line 633)


state 239
	function_args:  function_args COMMA named_arg.    (128)

	.  reduce 128 (src line 637)


state 240
	call_expr:  expr LEFT_PAREN function_args COMMA RIGHT_PAREN.    (133)

	.  reduce 133 (src line 662)


state 241
	call_expr:  expr LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN.    (132)

	.  reduce 132 (src line 658)


state 242
	in_expr:  expr.IN expr 
	named_arg:  identifier EQ expr.    (131)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 131 (src line 651)


state 243
	index_expr:  expr LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET.    (152)

	.  reduce 152 (src line 751)


state 244
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty.COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 265
	COLON  shift 264
	.  error


state 245
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	expr_or_empty:  expr.    (155)
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 155 (src line 769)


state 246
	var_def_stmt:  LET identifier data_type EQ expr.    (62)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 62 (src line 313)


state 247
	list_type:  LEFT_BRACKET RIGHT_BRACKET data_type.    (59)

	.  reduce 59 (src line 296)


state 248
	array_type:  LEFT_BRACKET NUMBER RIGHT_BRACKET.data_type 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 266
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 249
	map_type:  MAP LEFT_BRACKET data_type.RIGHT_BRACKET data_type 

	RIGHT_BRACKET  shift 267
	.  error


state 250
	fn_type:  FN LEFT_PAREN RIGHT_PAREN.LEFT_BRACE RIGHT_BRACE 
	fn_type:  FN LEFT_PAREN RIGHT_PAREN.LEFT_BRACE RIGHT_BRACE FN_RET data_type 
	fn_type:  FN LEFT_PAREN RIGHT_PAREN.LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 

	LEFT_BRACE  shift 268
	.  error


state 251
	fn_type:  FN LEFT_PAREN fn_def_params.RIGHT_PAREN LEFT_BRACE RIGHT_BRACE 
	fn_type:  FN LEFT_PAREN fn_def_params.RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET data_type 
	fn_type:  FN LEFT_PAREN fn_def_params.RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 
	fn_def_params:  fn_def_params.COMMA fn_def_param 

	COMMA  shift 254
	RIGHT_PAREN  shift 269
	.  error


state 252
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN stmt_block.    (87)

	.  reduce 87 (src line 432)


state 253
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET.data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET.LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	LEFT_PAREN  shift 271
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 270
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 254
	fn_def_params:  fn_def_params COMMA.fn_def_param 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 219
	fn_def_param  goto 272

state 255
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN.stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN.FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN.FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	LEFT_BRACE  shift 130
	FN_RET  shift 274
	.  error

	stmt_block  goto 273
	empty_block  goto 129

state 256
	fn_def_param:  identifier COLON.data_type 
	fn_def_param:  identifier COLON.VAR_ARG data_type 
	fn_def_param:  identifier COLON.data_type EQ expr 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	VAR_ARG  shift 276
	.  error

	identifier  goto 175
	data_type  goto 275
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 257
	fn_def_param:  identifier EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 277
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 258
	expr_colon_expr:  expr_colon_expr COMMA expr COLON.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 278
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 259
	index_expr:  DOT LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET.    (153)

	.  reduce 153 (src line 755)


state 260
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 279
	empty_block  goto 129

state 261
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON stmt_block.    (111)

	.  reduce 111 (src line 550)


state 262
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON for_loop_elem stmt_block.    (112)

	.  reduce 112 (src line 554)


state 263
	for_stmt:  FOR SEMICOLON expr SEMICOLON for_loop_elem stmt_block.    (114)

	.  reduce 114 (src line 562)


state 264
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON.expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 11 (src line 173)

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 245
	map_literal  goto 39
	expr_or_empty  goto 280
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	EOLS  goto 163
	EOLS_SPACE  goto 162

state 265
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET.    (158)

	.  reduce 158 (src line 784)


state 266
	array_type:  LEFT_BRACKET NUMBER RIGHT_BRACKET data_type.    (60)

	.  reduce 60 (src line 302)


state 267
	map_type:  MAP LEFT_BRACKET data_type RIGHT_BRACKET.data_type 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 281
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 268
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE.RIGHT_BRACE 
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE.RIGHT_BRACE FN_RET data_type 
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE.RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 

	RIGHT_BRACE  shift 282
	.  error


state 269
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN.LEFT_BRACE RIGHT_BRACE 
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN.LEFT_BRACE RIGHT_BRACE FN_RET data_type 
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN.LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 

	LEFT_BRACE  shift 283
	.  error


state 270
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET data_type.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 284
	empty_block  goto 129

state 271
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN.fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 286
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173
	fn_ret_types_multi  goto 285

state 272
	fn_def_params:  fn_def_params COMMA fn_def_param.    (84)

	.  reduce 84 (src line 422)


state 273
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN stmt_block.    (90)

	.  reduce 90 (src line 444)


state 274
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET.data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET.LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	LEFT_PAREN  shift 288
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 287
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 275
	fn_def_param:  identifier COLON data_type.    (77)
	fn_def_param:  identifier COLON data_type.EQ expr 

	EQ  shift 289
	.  reduce 77 (src line 391)


state 276
	fn_def_param:  identifier COLON VAR_ARG.data_type 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 290
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 277
	fn_def_param:  identifier EQ expr.    (79)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 79 (src line 399)


state 278
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr_colon_expr COMMA expr COLON expr.    (163)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 163 (src line 835)


state 279
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON for_loop_elem stmt_block.    (110)

	.  reduce 110 (src line 546)


state 280
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 291
	.  error


state 281
	map_type:  MAP LEFT_BRACKET data_type RIGHT_BRACKET data_type.    (61)

	.  reduce 61 (src line 307)


state 282
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE.    (65)
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE.FN_RET data_type 
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE.FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 

	FN_RET  shift 292
	.  reduce 65 (src line 328)


state 283
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE.RIGHT_BRACE 
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE.RIGHT_BRACE FN_RET data_type 
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE.RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 

	RIGHT_BRACE  shift 293
	.  error


state 284
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET data_type stmt_block.    (88)

	.  reduce 88 (src line 436)


state 285
	fn_ret_types_multi:  fn_ret_types_multi.COMMA data_type 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi.RIGHT_PAREN stmt_block 

	COMMA  shift 294
	RIGHT_PAREN  shift 295
	.  error


state 286
	fn_ret_types_multi:  data_type.    (85)

	.  reduce 85 (src line 426)


state 287
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 296
	empty_block  goto 129

state 288
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN.fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 286
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173
	fn_ret_types_multi  goto 297

state 289
	fn_def_param:  identifier COLON data_type EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 298
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 290
	fn_def_param:  identifier COLON VAR_ARG data_type.    (78)

	.  reduce 78 (src line 395)


state 291
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET.    (157)

	.  reduce 157 (src line 780)


state 292
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET.data_type 
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET.LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 

	ID  shift 50
	LEFT_PAREN  shift 300
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 299
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 293
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE.    (68)
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE.FN_RET data_type 
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE.FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 

	FN_RET  shift 301
	.  reduce 68 (src line 340)


state 294
	fn_ret_types_multi:  fn_ret_types_multi COMMA.data_type 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 302
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 295
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 303
	empty_block  goto 129

state 296
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type stmt_block.    (91)

	.  reduce 91 (src line 448)


state 297
	fn_ret_types_multi:  fn_ret_types_multi.COMMA data_type 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi.RIGHT_PAREN stmt_block 

	COMMA  shift 294
	RIGHT_PAREN  shift 304
	.  error


state 298
	fn_def_param:  identifier COLON data_type EQ expr.    (80)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 80 (src line 403)


state 299
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET data_type.    (66)

	.  reduce 66 (src line 332)


state 300
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN.fn_ret_types_multi RIGHT_PAREN 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 286
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173
	fn_ret_types_multi  goto 305

state 301
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET.data_type 
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET.LEFT_PAREN fn_ret_types_multi RIGHT_PAREN 

	ID  shift 50
	LEFT_PAREN  shift 307
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 306
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173

state 302
	fn_ret_types_multi:  fn_ret_types_multi COMMA data_type.    (86)

	.  reduce 86 (src line 427)


state 303
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block.    (89)

	.  reduce 89 (src line 440)


state 304
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 308
	empty_block  goto 129

state 305
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi.RIGHT_PAREN 
	fn_ret_types_multi:  fn_ret_types_multi.COMMA data_type 

	COMMA  shift 294
	RIGHT_PAREN  shift 309
	.  error


state 306
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET data_type.    (69)

	.  reduce 69 (src line 344)


state 307
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN.fn_ret_types_multi RIGHT_PAREN 

	ID  shift 50
	LEFT_BRACKET  shift 177
	STRING  shift 169
	QUOTED_STRING  shift 51
	INT  shift 167
	FLOAT  shift 168
	BOOL  shift 170
	MAP  shift 178
	ANY  shift 171
	FN  shift 179
	.  error

	identifier  goto 175
	data_type  goto 286
	fn_type  goto 174
	list_type  goto 172
	array_type  goto 176
	map_type  goto 173
	fn_ret_types_multi  goto 310

state 308
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block.    (92)

	.  reduce 92 (src line 452)


state 309
	fn_type:  FN LEFT_PAREN RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN.    (67)

	.  reduce 67 (src line 336)


state 310
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi.RIGHT_PAREN 
	fn_ret_types_multi:  fn_ret_types_multi.COMMA data_type 

	COMMA  shift 294
	RIGHT_PAREN  shift 311
	.  error


state 311
	fn_type:  FN LEFT_PAREN fn_def_params RIGHT_PAREN LEFT_BRACE RIGHT_BRACE FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN.    (70)

	.  reduce 70 (src line 348)


86 terminals, 56 nonterminals
175 grammar rules, 312/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
155 working sets used
memory: parser 1405/240000
270 extra closures
1937 shift entries, 13 exceptions
199 goto entries
912 entries saved by goto default
Optimizer space used: output 1446/240000
1446 table entries, 541 zero
maximum spread: 84, maximum offset: 307
