
state 0
	$accept: .start $end 

	error  shift 3
	START_STMTS  shift 2
	.  error

	start  goto 1

state 1
	$accept:  start.$end 
	start:  start.EOF 

	$end  accept
	EOF  shift 4
	.  error


state 2
	start:  START_STMTS.stmts 
	start:  START_STMTS.EOLS 
	start:  START_STMTS.EOLS stmts 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 31
	LET  shift 29
	IMPORT  shift 32
	CONST  shift 30
	.  error

	stmts  goto 5
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	let_stmt  goto 17
	const_def_stmt  goto 18
	fn_def_stmt  goto 19
	import_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10
	EOLS  goto 6

state 3
	start:  error.    (16)

	.  reduce 16 (src line 187)


state 4
	start:  start EOF.    (15)

	.  reduce 15 (src line 186)


state 5
	start:  START_STMTS stmts.    (12)

	.  reduce 12 (src line 174)


state 6
	EOLS:  EOLS.EOL 
	start:  START_STMTS EOLS.    (13)
	start:  START_STMTS EOLS.stmts 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 66
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 31
	LET  shift 29
	IMPORT  shift 32
	CONST  shift 30
	.  reduce 13 (src line 178)

	stmts  goto 67
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	let_stmt  goto 17
	const_def_stmt  goto 18
	fn_def_stmt  goto 19
	import_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10

state 7
	stmts:  stmts_list.stmt 
	stmts:  stmts_list.    (18)
	stmts_list:  stmts_list.stmt sep 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 31
	LET  shift 29
	IMPORT  shift 32
	CONST  shift 30
	.  reduce 18 (src line 203)

	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 68
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	let_stmt  goto 17
	const_def_stmt  goto 18
	fn_def_stmt  goto 19
	import_stmt  goto 20
	return_stmt  goto 21

state 8
	stmts:  stmt.    (19)
	stmts_list:  stmt.sep 

	SEMICOLON  shift 70
	EOL  shift 71
	.  reduce 19 (src line 204)

	sep  goto 69

state 9
	EOLS:  EOL.    (8)

	.  reduce 8 (src line 166)


state 10
	sem:  sem.EOL 
	sem:  sem.SEMICOLON 
	stmts_list:  sem.    (21)

	SEMICOLON  shift 73
	EOL  shift 72
	.  reduce 21 (src line 214)


state 11
	stmt:  ifelse_stmt.    (23)

	.  reduce 23 (src line 226)


state 12
	stmt:  for_in_stmt.    (24)

	.  reduce 24 (src line 227)


state 13
	stmt:  for_stmt.    (25)

	.  reduce 25 (src line 228)


state 14
	stmt:  continue_stmt.    (26)

	.  reduce 26 (src line 229)


state 15
	stmt:  break_stmt.    (27)

	.  reduce 27 (src line 230)


state 16
	stmt:  value_stmt.    (28)

	.  reduce 28 (src line 231)


state 17
	stmt:  let_stmt.    (29)

	.  reduce 29 (src line 232)


state 18
	stmt:  const_def_stmt.    (30)

	.  reduce 30 (src line 233)


state 19
	stmt:  fn_def_stmt.    (31)

	.  reduce 31 (src line 234)


state 20
	stmt:  import_stmt.    (32)

	.  reduce 32 (src line 235)


state 21
	stmt:  return_stmt.    (33)

	.  reduce 33 (src line 236)


state 22
	stmt:  assignment_stmt.    (34)

	.  reduce 34 (src line 237)


state 23
	sem:  SEMICOLON.    (5)

	.  reduce 5 (src line 161)


state 24
	ifelse_stmt:  if_elif_list.    (105)
	ifelse_stmt:  if_elif_list.ELSE stmt_block 
	if_elif_list:  if_elif_list.elif_elem 

	ELIF  shift 76
	ELSE  shift 74
	.  reduce 105 (src line 543)

	elif_elem  goto 75

state 25
	for_in_stmt:  FOR.in_expr stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON expr SEMICOLON stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.for_init_elem SEMICOLON SEMICOLON stmt_block 
	for_stmt:  FOR.SEMICOLON expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.SEMICOLON expr SEMICOLON stmt_block 
	for_stmt:  FOR.SEMICOLON SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR.SEMICOLON SEMICOLON stmt_block 

	SEMICOLON  shift 79
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	LET  shift 29
	.  error

	exprs  goto 34
	assignment_stmt  goto 81
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 77
	expr  goto 80
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_init_elem  goto 78
	slice_expr  goto 46
	let_stmt  goto 82

state 26
	continue_stmt:  CONTINUE.    (90)

	.  reduce 90 (src line 478)


state 27
	break_stmt:  BREAK.    (89)

	.  reduce 89 (src line 471)


state 28
	value_stmt:  expr.    (35)
	exprs:  expr.    (81)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	COMMA  reduce 81 (src line 427)
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	EQ  reduce 81 (src line 427)
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 35 (src line 241)


state 29
	let_stmt:  LET.identifier COLON data_type EQ expr 
	let_stmt:  LET.identifier COLON data_type 
	let_stmt:  LET.identifier 
	let_stmt:  LET.identifier EQ expr 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 105

state 30
	const_def_stmt:  CONST.identifier EQ expr 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 106

state 31
	fn_def_stmt:  FN.identifier LEFT_PAREN RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN fn_def_params RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN.identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 107

state 32
	import_stmt:  IMPORT.pkg_name 
	import_stmt:  IMPORT.pkg_name AS identifier 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	pkg_name  goto 108
	identifier  goto 109

state 33
	return_stmt:  RETURN.    (69)
	return_stmt:  RETURN.exprs 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 69 (src line 367)

	exprs  goto 110
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 111
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 34
	exprs:  exprs.COMMA expr 
	assignment_stmt:  exprs.EQ exprs 

	COMMA  shift 112
	EQ  shift 113
	.  error


state 35
	if_elif_list:  if_elem.    (108)

	.  reduce 108 (src line 559)


state 36
	expr:  identifier.    (36)

	.  reduce 36 (src line 245)


state 37
	expr:  basic_literal.    (37)

	.  reduce 37 (src line 246)


state 38
	expr:  list_literal.    (38)

	.  reduce 38 (src line 247)


state 39
	expr:  map_literal.    (39)

	.  reduce 39 (src line 248)


state 40
	expr:  paren_expr.    (40)

	.  reduce 40 (src line 249)


state 41
	expr:  unary_expr.    (41)

	.  reduce 41 (src line 250)


state 42
	expr:  conditional_expr.    (42)

	.  reduce 42 (src line 251)


state 43
	expr:  arithmeticExpr.    (43)

	.  reduce 43 (src line 252)


state 44
	expr:  attr_expr.    (44)

	.  reduce 44 (src line 253)


state 45
	expr:  index_expr.    (45)

	.  reduce 45 (src line 254)


state 46
	expr:  slice_expr.    (46)

	.  reduce 46 (src line 255)


state 47
	expr:  in_expr.    (47)

	.  reduce 47 (src line 256)


state 48
	expr:  call_expr.    (48)

	.  reduce 48 (src line 257)


state 49
	if_elem:  IF.expr stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 114
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 50
	identifier:  ID.    (154)

	.  reduce 154 (src line 796)


state 51
	identifier:  QUOTED_STRING.    (155)

	.  reduce 155 (src line 800)


state 52
	basic_literal:  NUMBER.    (156)

	.  reduce 156 (src line 807)


state 53
	basic_literal:  TRUE.    (157)

	.  reduce 157 (src line 811)


state 54
	basic_literal:  FALSE.    (158)

	.  reduce 158 (src line 815)


state 55
	basic_literal:  STRING.    (159)

	.  reduce 159 (src line 819)


state 56
	basic_literal:  MULTILINE_STRING.    (160)

	.  reduce 160 (src line 824)


state 57
	basic_literal:  NIL.    (161)

	.  reduce 161 (src line 829)


state 58
	basic_literal:  NULL.    (162)

	.  reduce 162 (src line 833)


state 59
	list_literal:  LEFT_BRACKET.exprs EOLS_SPACE RIGHT_BRACKET 
	list_literal:  LEFT_BRACKET.exprs COMMA RIGHT_BRACKET 
	list_literal:  LEFT_BRACKET.RIGHT_BRACKET 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACKET  shift 116
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	exprs  goto 115
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 111
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 60
	map_literal:  LEFT_BRACE.RIGHT_BRACE 
	map_literal:  LEFT_BRACE.expr_colon_expr EOLS_SPACE RIGHT_BRACE 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACE  shift 117
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	expr_colon_expr  goto 118
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 119
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 61
	paren_expr:  LEFT_PAREN.expr EOLS_SPACE RIGHT_PAREN 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 120
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 62
	unary_expr:  ADD.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 121
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 63
	unary_expr:  SUB.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 122
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 64
	unary_expr:  NOT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 123
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 65
	index_expr:  DOT.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 

	LEFT_BRACKET  shift 124
	.  error


state 66
	EOLS:  EOLS EOL.    (9)

	.  reduce 9 (src line 167)


state 67
	start:  START_STMTS EOLS stmts.    (14)

	.  reduce 14 (src line 182)


state 68
	stmts:  stmts_list stmt.    (17)
	stmts_list:  stmts_list stmt.sep 

	SEMICOLON  shift 70
	EOL  shift 71
	.  reduce 17 (src line 197)

	sep  goto 125

state 69
	sep:  sep.SEMICOLON 
	sep:  sep.EOL 
	stmts_list:  stmt sep.    (20)

	SEMICOLON  shift 126
	EOL  shift 127
	.  reduce 20 (src line 210)


state 70
	sep:  SEMICOLON.    (1)

	.  reduce 1 (src line 155)


state 71
	sep:  EOL.    (2)

	.  reduce 2 (src line 156)


state 72
	sem:  sem EOL.    (6)

	.  reduce 6 (src line 162)


state 73
	sem:  sem SEMICOLON.    (7)

	.  reduce 7 (src line 163)


state 74
	ifelse_stmt:  if_elif_list ELSE.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 128
	empty_block  goto 129

state 75
	if_elif_list:  if_elif_list elif_elem.    (109)

	.  reduce 109 (src line 563)


state 76
	elif_elem:  ELIF.expr stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 131
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 77
	expr:  in_expr.    (47)
	for_in_stmt:  FOR in_expr.stmt_block 

	LEFT_BRACE  shift 130
	.  reduce 47 (src line 256)

	stmt_block  goto 132
	empty_block  goto 129

state 78
	for_stmt:  FOR for_init_elem.SEMICOLON expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem.SEMICOLON expr SEMICOLON stmt_block 
	for_stmt:  FOR for_init_elem.SEMICOLON SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem.SEMICOLON SEMICOLON stmt_block 

	SEMICOLON  shift 133
	.  error


state 79
	for_stmt:  FOR SEMICOLON.expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON.expr SEMICOLON stmt_block 
	for_stmt:  FOR SEMICOLON.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON.SEMICOLON stmt_block 

	SEMICOLON  shift 135
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 134
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 80
	exprs:  expr.    (81)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	for_init_elem:  expr.    (92)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	SEMICOLON  reduce 92 (src line 503)
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 81 (src line 427)


state 81
	for_init_elem:  assignment_stmt.    (93)

	.  reduce 93 (src line 503)


state 82
	for_init_elem:  let_stmt.    (94)

	.  reduce 94 (src line 503)


state 83
	assignment_stmt:  expr ADD_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 136
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 84
	assignment_stmt:  expr SUB_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 137
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 85
	assignment_stmt:  expr MUL_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 138
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 86
	assignment_stmt:  expr DIV_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 139
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 87
	assignment_stmt:  expr MOD_EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 140
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 88
	in_expr:  expr IN.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 141
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 89
	call_expr:  expr LEFT_PAREN.function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr LEFT_PAREN.function_args COMMA RIGHT_PAREN 
	call_expr:  expr LEFT_PAREN.RIGHT_PAREN 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_PAREN  shift 143
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	function_args  goto 142
	call_expr  goto 48
	named_arg  goto 144
	identifier  goto 146
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 145
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 90
	conditional_expr:  expr GTE.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 147
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 91
	conditional_expr:  expr GT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 148
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 92
	conditional_expr:  expr OR.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 149
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 93
	conditional_expr:  expr AND.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 150
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 94
	conditional_expr:  expr LT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 151
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 95
	conditional_expr:  expr LTE.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 152
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 96
	conditional_expr:  expr NEQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 153
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 97
	conditional_expr:  expr EQEQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 154
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 98
	arithmeticExpr:  expr ADD.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 155
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 99
	arithmeticExpr:  expr SUB.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 156
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 100
	arithmeticExpr:  expr MUL.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 157
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 101
	arithmeticExpr:  expr DIV.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 158
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 102
	arithmeticExpr:  expr MOD.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 159
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 103
	index_expr:  expr LEFT_BRACKET.expr EOLS_SPACE RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET.expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET.expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 11 (src line 171)

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 160
	map_literal  goto 39
	expr_or_empty  goto 161
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	EOLS  goto 163
	EOLS_SPACE  goto 162

state 104
	attr_expr:  expr DOT.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 164
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 105
	let_stmt:  LET identifier.COLON data_type EQ expr 
	let_stmt:  LET identifier.COLON data_type 
	let_stmt:  LET identifier.    (57)
	let_stmt:  LET identifier.EQ expr 

	COLON  shift 165
	EQ  shift 166
	.  reduce 57 (src line 303)


state 106
	const_def_stmt:  CONST identifier.EQ expr 

	EQ  shift 167
	.  error


state 107
	fn_def_stmt:  FN identifier.LEFT_PAREN RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN fn_def_params RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier.LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	LEFT_PAREN  shift 168
	.  error


state 108
	pkg_name:  pkg_name.DOT identifier 
	import_stmt:  IMPORT pkg_name.    (61)
	import_stmt:  IMPORT pkg_name.AS identifier 

	DOT  shift 169
	AS  shift 170
	.  reduce 61 (src line 329)


state 109
	pkg_name:  identifier.    (59)

	.  reduce 59 (src line 319)


state 110
	return_stmt:  RETURN exprs.    (70)
	exprs:  exprs.COMMA expr 

	COMMA  shift 112
	.  reduce 70 (src line 371)


state 111
	exprs:  expr.    (81)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 81 (src line 427)


state 112
	exprs:  exprs COMMA.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 171
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 113
	assignment_stmt:  exprs EQ.exprs 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	exprs  goto 172
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 111
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 114
	if_elem:  IF expr.stmt_block 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	LEFT_BRACE  shift 130
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error

	stmt_block  goto 173
	empty_block  goto 129

state 115
	exprs:  exprs.COMMA expr 
	list_literal:  LEFT_BRACKET exprs.EOLS_SPACE RIGHT_BRACKET 
	list_literal:  LEFT_BRACKET exprs.COMMA RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	COMMA  shift 174
	EOL  shift 9
	.  reduce 11 (src line 171)

	EOLS  goto 163
	EOLS_SPACE  goto 175

state 116
	list_literal:  LEFT_BRACKET RIGHT_BRACKET.    (149)

	.  reduce 149 (src line 769)


state 117
	map_literal:  LEFT_BRACE RIGHT_BRACE.    (152)

	.  reduce 152 (src line 785)


state 118
	expr_colon_expr:  expr_colon_expr.COMMA expr COLON expr 
	map_literal:  LEFT_BRACE expr_colon_expr.EOLS_SPACE RIGHT_BRACE 
	EOLS_SPACE: .    (11)

	COMMA  shift 176
	EOL  shift 9
	.  reduce 11 (src line 171)

	EOLS  goto 163
	EOLS_SPACE  goto 177

state 119
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr.COLON expr 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  shift 178
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 120
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	paren_expr:  LEFT_PAREN expr.EOLS_SPACE RIGHT_PAREN 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	EOL  shift 9
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 11 (src line 171)

	EOLS  goto 163
	EOLS_SPACE  goto 179

state 121
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	unary_expr:  ADD expr.    (123)
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 123 (src line 640)


state 122
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	unary_expr:  SUB expr.    (124)
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 124 (src line 644)


state 123
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	unary_expr:  NOT expr.    (125)
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 125 (src line 648)


state 124
	index_expr:  DOT LEFT_BRACKET.expr EOLS_SPACE RIGHT_BRACKET 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 180
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 125
	sep:  sep.SEMICOLON 
	sep:  sep.EOL 
	stmts_list:  stmts_list stmt sep.    (22)

	SEMICOLON  shift 126
	EOL  shift 127
	.  reduce 22 (src line 218)


state 126
	sep:  sep SEMICOLON.    (3)

	.  reduce 3 (src line 157)


state 127
	sep:  sep EOL.    (4)

	.  reduce 4 (src line 158)


state 128
	ifelse_stmt:  if_elif_list ELSE stmt_block.    (106)

	.  reduce 106 (src line 547)


state 129
	stmt_block:  empty_block.    (111)

	.  reduce 111 (src line 576)


state 130
	stmt_block:  LEFT_BRACE.stmts RIGHT_BRACE 
	empty_block:  LEFT_BRACE.RIGHT_BRACE 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACE  shift 182
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 31
	LET  shift 29
	IMPORT  shift 32
	CONST  shift 30
	.  error

	stmts  goto 181
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 28
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	let_stmt  goto 17
	const_def_stmt  goto 18
	fn_def_stmt  goto 19
	import_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10

state 131
	elif_elem:  ELIF expr.stmt_block 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	LEFT_BRACE  shift 130
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error

	stmt_block  goto 183
	empty_block  goto 129

state 132
	for_in_stmt:  FOR in_expr stmt_block.    (91)

	.  reduce 91 (src line 489)


state 133
	for_stmt:  FOR for_init_elem SEMICOLON.expr SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON.expr SEMICOLON stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON.SEMICOLON stmt_block 

	SEMICOLON  shift 185
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 184
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 134
	for_stmt:  FOR SEMICOLON expr.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON expr.SEMICOLON stmt_block 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	SEMICOLON  shift 186
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 135
	for_stmt:  FOR SEMICOLON SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 191
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 188
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 190
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 189
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 187
	slice_expr  goto 46

state 136
	assignment_stmt:  expr ADD_EQ expr.    (84)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 84 (src line 443)


state 137
	assignment_stmt:  expr SUB_EQ expr.    (85)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 85 (src line 448)


state 138
	assignment_stmt:  expr MUL_EQ expr.    (86)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 86 (src line 453)


state 139
	assignment_stmt:  expr DIV_EQ expr.    (87)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 87 (src line 458)


state 140
	assignment_stmt:  expr MOD_EQ expr.    (88)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 88 (src line 463)


state 141
	in_expr:  expr.IN expr 
	in_expr:  expr IN expr.    (114)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	DOT  shift 104
	.  reduce 114 (src line 595)


state 142
	function_args:  function_args.COMMA expr 
	function_args:  function_args.COMMA named_arg 
	call_expr:  expr LEFT_PAREN function_args.EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr LEFT_PAREN function_args.COMMA RIGHT_PAREN 
	EOLS_SPACE: .    (11)

	COMMA  shift 192
	EOL  shift 9
	.  reduce 11 (src line 171)

	EOLS  goto 163
	EOLS_SPACE  goto 193

state 143
	call_expr:  expr LEFT_PAREN RIGHT_PAREN.    (122)

	.  reduce 122 (src line 634)


state 144
	function_args:  named_arg.    (117)

	.  reduce 117 (src line 609)


state 145
	in_expr:  expr.IN expr 
	function_args:  expr.    (118)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 118 (src line 613)


state 146
	expr:  identifier.    (36)
	named_arg:  identifier.EQ expr 

	EQ  shift 194
	.  reduce 36 (src line 245)


state 147
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr GTE expr.    (126)
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 126 (src line 654)


state 148
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr GT expr.    (127)
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 127 (src line 658)


state 149
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr OR expr.    (128)
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	DOT  shift 104
	IN  shift 88
	.  reduce 128 (src line 662)


state 150
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr AND expr.    (129)
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	DOT  shift 104
	IN  shift 88
	.  reduce 129 (src line 666)


state 151
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr LT expr.    (130)
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 130 (src line 670)


state 152
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr LTE expr.    (131)
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 131 (src line 674)


state 153
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr NEQ expr.    (132)
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 132 (src line 678)


state 154
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	conditional_expr:  expr EQEQ expr.    (133)
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 133 (src line 682)


state 155
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr ADD expr.    (134)
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 134 (src line 689)


state 156
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr SUB expr.    (135)
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	DOT  shift 104
	.  reduce 135 (src line 693)


state 157
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr MUL expr.    (136)
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 136 (src line 697)


state 158
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr DIV expr.    (137)
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 137 (src line 701)


state 159
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	arithmeticExpr:  expr MOD expr.    (138)
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	DOT  shift 104
	.  reduce 138 (src line 705)


state 160
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	index_expr:  expr LEFT_BRACKET expr.EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	expr_or_empty:  expr.    (143)
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  reduce 143 (src line 737)
	EOL  shift 9
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 11 (src line 171)

	EOLS  goto 163
	EOLS_SPACE  goto 195

state 161
	slice_expr:  expr LEFT_BRACKET expr_or_empty.COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET expr_or_empty.COLON expr_or_empty RIGHT_BRACKET 

	COLON  shift 196
	.  error


state 162
	expr_or_empty:  EOLS_SPACE.    (144)

	.  reduce 144 (src line 741)


state 163
	EOLS:  EOLS.EOL 
	EOLS_SPACE:  EOLS.    (10)

	EOL  shift 66
	.  reduce 10 (src line 170)


state 164
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	attr_expr:  expr DOT expr.    (142)
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	.  reduce 142 (src line 730)


state 165
	let_stmt:  LET identifier COLON.data_type EQ expr 
	let_stmt:  LET identifier COLON.data_type 

	STR  shift 200
	INT  shift 198
	FLOAT  shift 199
	BOOL  shift 201
	ANY  shift 202
	.  error

	data_type  goto 197

state 166
	let_stmt:  LET identifier EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 203
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 167
	const_def_stmt:  CONST identifier EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 204
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 168
	fn_def_stmt:  FN identifier LEFT_PAREN.RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.fn_def_params RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.fn_def_params RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN.fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	ID  shift 50
	RIGHT_PAREN  shift 205
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 208
	fn_def_param  goto 207
	fn_def_params  goto 206

state 169
	pkg_name:  pkg_name DOT.identifier 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 209

state 170
	import_stmt:  IMPORT pkg_name AS.identifier 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 210

state 171
	exprs:  exprs COMMA expr.    (82)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 82 (src line 431)


state 172
	exprs:  exprs.COMMA expr 
	assignment_stmt:  exprs EQ exprs.    (83)

	COMMA  shift 112
	.  reduce 83 (src line 438)


state 173
	if_elem:  IF expr stmt_block.    (107)

	.  reduce 107 (src line 553)


state 174
	exprs:  exprs COMMA.expr 
	list_literal:  LEFT_BRACKET exprs COMMA.RIGHT_BRACKET 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACKET  shift 211
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 171
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 175
	list_literal:  LEFT_BRACKET exprs EOLS_SPACE.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 212
	.  error


state 176
	expr_colon_expr:  expr_colon_expr COMMA.expr COLON expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 213
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 177
	map_literal:  LEFT_BRACE expr_colon_expr EOLS_SPACE.RIGHT_BRACE 

	RIGHT_BRACE  shift 214
	.  error


state 178
	expr_colon_expr:  expr COLON.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 215
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 179
	paren_expr:  LEFT_PAREN expr EOLS_SPACE.RIGHT_PAREN 

	RIGHT_PAREN  shift 216
	.  error


state 180
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	index_expr:  DOT LEFT_BRACKET expr.EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	EOL  shift 9
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 11 (src line 171)

	EOLS  goto 163
	EOLS_SPACE  goto 217

state 181
	stmt_block:  LEFT_BRACE stmts.RIGHT_BRACE 

	RIGHT_BRACE  shift 218
	.  error


state 182
	empty_block:  LEFT_BRACE RIGHT_BRACE.    (113)

	.  reduce 113 (src line 584)


state 183
	elif_elem:  ELIF expr stmt_block.    (110)

	.  reduce 110 (src line 569)


state 184
	for_stmt:  FOR for_init_elem SEMICOLON expr.SEMICOLON for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON expr.SEMICOLON stmt_block 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	SEMICOLON  shift 219
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 185
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 191
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 221
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 190
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 189
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 220
	slice_expr  goto 46

state 186
	for_stmt:  FOR SEMICOLON expr SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR SEMICOLON expr SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 191
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 223
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 190
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 189
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 222
	slice_expr  goto 46

state 187
	for_stmt:  FOR SEMICOLON SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 224
	empty_block  goto 129

state 188
	for_stmt:  FOR SEMICOLON SEMICOLON stmt_block.    (104)

	.  reduce 104 (src line 536)


state 189
	exprs:  expr.    (81)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	for_loop_elem:  expr.    (95)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	LEFT_BRACE  reduce 95 (src line 506)
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 81 (src line 427)


state 190
	for_loop_elem:  assignment_stmt.    (96)

	.  reduce 96 (src line 506)


state 191
	stmt_block:  LEFT_BRACE.stmts RIGHT_BRACE 
	empty_block:  LEFT_BRACE.RIGHT_BRACE 
	map_literal:  LEFT_BRACE.RIGHT_BRACE 
	map_literal:  LEFT_BRACE.expr_colon_expr EOLS_SPACE RIGHT_BRACE 

	SEMICOLON  shift 23
	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_BRACE  shift 225
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	IF  shift 49
	FOR  shift 25
	BREAK  shift 27
	CONTINUE  shift 26
	RETURN  shift 33
	FN  shift 31
	LET  shift 29
	IMPORT  shift 32
	CONST  shift 30
	.  error

	stmts  goto 181
	stmts_list  goto 7
	if_elem  goto 35
	if_elif_list  goto 24
	exprs  goto 34
	expr_colon_expr  goto 118
	stmt  goto 8
	assignment_stmt  goto 22
	for_in_stmt  goto 12
	for_stmt  goto 13
	continue_stmt  goto 14
	break_stmt  goto 15
	ifelse_stmt  goto 11
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 226
	map_literal  goto 39
	value_stmt  goto 16
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	let_stmt  goto 17
	const_def_stmt  goto 18
	fn_def_stmt  goto 19
	import_stmt  goto 20
	return_stmt  goto 21
	sem  goto 10

state 192
	function_args:  function_args COMMA.expr 
	function_args:  function_args COMMA.named_arg 
	call_expr:  expr LEFT_PAREN function_args COMMA.RIGHT_PAREN 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	RIGHT_PAREN  shift 229
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	named_arg  goto 228
	identifier  goto 146
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 227
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 193
	call_expr:  expr LEFT_PAREN function_args EOLS_SPACE.RIGHT_PAREN 

	RIGHT_PAREN  shift 230
	.  error


state 194
	named_arg:  identifier EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 231
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 195
	index_expr:  expr LEFT_BRACKET expr EOLS_SPACE.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 232
	.  error


state 196
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON.expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON.expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 11 (src line 171)

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 234
	map_literal  goto 39
	expr_or_empty  goto 233
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	EOLS  goto 163
	EOLS_SPACE  goto 162

state 197
	let_stmt:  LET identifier COLON data_type.EQ expr 
	let_stmt:  LET identifier COLON data_type.    (56)

	EQ  shift 235
	.  reduce 56 (src line 299)


state 198
	data_type:  INT.    (49)

	.  reduce 49 (src line 265)


state 199
	data_type:  FLOAT.    (50)

	.  reduce 50 (src line 269)


state 200
	data_type:  STR.    (51)

	.  reduce 51 (src line 273)


state 201
	data_type:  BOOL.    (52)

	.  reduce 52 (src line 277)


state 202
	data_type:  ANY.    (53)

	.  reduce 53 (src line 281)


state 203
	let_stmt:  LET identifier EQ expr.    (58)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 58 (src line 307)


state 204
	const_def_stmt:  CONST identifier EQ expr.    (54)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 54 (src line 288)


state 205
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN.stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN.FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN.FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	LEFT_BRACE  shift 130
	FN_RET  shift 237
	.  error

	stmt_block  goto 236
	empty_block  goto 129

state 206
	fn_def_params:  fn_def_params.COMMA fn_def_param 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params.RIGHT_PAREN stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params.RIGHT_PAREN FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params.RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	COMMA  shift 238
	RIGHT_PAREN  shift 239
	.  error


state 207
	fn_def_params:  fn_def_param.    (71)

	.  reduce 71 (src line 378)


state 208
	fn_def_param:  identifier.    (63)
	fn_def_param:  identifier.COLON data_type 
	fn_def_param:  identifier.COLON VAR_ARG data_type 
	fn_def_param:  identifier.COLON VAR_ARG 
	fn_def_param:  identifier.EQ expr 
	fn_def_param:  identifier.COLON data_type EQ expr 

	COLON  shift 240
	EQ  shift 241
	.  reduce 63 (src line 340)


state 209
	pkg_name:  pkg_name DOT identifier.    (60)

	.  reduce 60 (src line 323)


state 210
	import_stmt:  IMPORT pkg_name AS identifier.    (62)

	.  reduce 62 (src line 333)


state 211
	list_literal:  LEFT_BRACKET exprs COMMA RIGHT_BRACKET.    (148)

	.  reduce 148 (src line 765)


state 212
	list_literal:  LEFT_BRACKET exprs EOLS_SPACE RIGHT_BRACKET.    (147)

	.  reduce 147 (src line 761)


state 213
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr_colon_expr COMMA expr.COLON expr 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  shift 242
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  error


state 214
	map_literal:  LEFT_BRACE expr_colon_expr EOLS_SPACE RIGHT_BRACE.    (153)

	.  reduce 153 (src line 789)


state 215
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr COLON expr.    (150)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 150 (src line 775)


state 216
	paren_expr:  LEFT_PAREN expr EOLS_SPACE RIGHT_PAREN.    (139)

	.  reduce 139 (src line 712)


state 217
	index_expr:  DOT LEFT_BRACKET expr EOLS_SPACE.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 243
	.  error


state 218
	stmt_block:  LEFT_BRACE stmts RIGHT_BRACE.    (112)

	.  reduce 112 (src line 577)


state 219
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON.for_loop_elem stmt_block 
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON.stmt_block 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 191
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	stmt_block  goto 245
	empty_block  goto 129
	exprs  goto 34
	assignment_stmt  goto 190
	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 189
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	for_loop_elem  goto 244
	slice_expr  goto 46

state 220
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 246
	empty_block  goto 129

state 221
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON stmt_block.    (100)

	.  reduce 100 (src line 520)


state 222
	for_stmt:  FOR SEMICOLON expr SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 247
	empty_block  goto 129

state 223
	for_stmt:  FOR SEMICOLON expr SEMICOLON stmt_block.    (102)

	.  reduce 102 (src line 528)


state 224
	for_stmt:  FOR SEMICOLON SEMICOLON for_loop_elem stmt_block.    (103)

	.  reduce 103 (src line 532)


state 225
	empty_block:  LEFT_BRACE RIGHT_BRACE.    (113)
	map_literal:  LEFT_BRACE RIGHT_BRACE.    (152)

	$end  reduce 113 (src line 584)
	SEMICOLON  reduce 113 (src line 584)
	EOF  reduce 113 (src line 584)
	RIGHT_BRACE  reduce 113 (src line 584)
	EOL  reduce 113 (src line 584)
	.  reduce 152 (src line 785)


state 226
	value_stmt:  expr.    (35)
	exprs:  expr.    (81)
	assignment_stmt:  expr.ADD_EQ expr 
	assignment_stmt:  expr.SUB_EQ expr 
	assignment_stmt:  expr.MUL_EQ expr 
	assignment_stmt:  expr.DIV_EQ expr 
	assignment_stmt:  expr.MOD_EQ expr 
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr.COLON expr 

	COMMA  reduce 81 (src line 427)
	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	COLON  shift 178
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	EQ  reduce 81 (src line 427)
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	ADD_EQ  shift 83
	SUB_EQ  shift 84
	DIV_EQ  shift 86
	MUL_EQ  shift 85
	MOD_EQ  shift 87
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 35 (src line 241)


state 227
	in_expr:  expr.IN expr 
	function_args:  function_args COMMA expr.    (115)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 115 (src line 601)


state 228
	function_args:  function_args COMMA named_arg.    (116)

	.  reduce 116 (src line 605)


state 229
	call_expr:  expr LEFT_PAREN function_args COMMA RIGHT_PAREN.    (121)

	.  reduce 121 (src line 630)


state 230
	call_expr:  expr LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN.    (120)

	.  reduce 120 (src line 626)


state 231
	in_expr:  expr.IN expr 
	named_arg:  identifier EQ expr.    (119)
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 119 (src line 619)


state 232
	index_expr:  expr LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET.    (140)

	.  reduce 140 (src line 719)


state 233
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty.COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 249
	COLON  shift 248
	.  error


state 234
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	expr_or_empty:  expr.    (143)
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 143 (src line 737)


state 235
	let_stmt:  LET identifier COLON data_type EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 250
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 236
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN stmt_block.    (75)

	.  reduce 75 (src line 401)


state 237
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET.data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET.LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	LEFT_PAREN  shift 252
	STR  shift 200
	INT  shift 198
	FLOAT  shift 199
	BOOL  shift 201
	ANY  shift 202
	.  error

	data_type  goto 251

state 238
	fn_def_params:  fn_def_params COMMA.fn_def_param 

	ID  shift 50
	QUOTED_STRING  shift 51
	.  error

	identifier  goto 208
	fn_def_param  goto 253

state 239
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN.stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN.FN_RET data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN.FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	LEFT_BRACE  shift 130
	FN_RET  shift 255
	.  error

	stmt_block  goto 254
	empty_block  goto 129

state 240
	fn_def_param:  identifier COLON.data_type 
	fn_def_param:  identifier COLON.VAR_ARG data_type 
	fn_def_param:  identifier COLON.VAR_ARG 
	fn_def_param:  identifier COLON.data_type EQ expr 

	STR  shift 200
	INT  shift 198
	FLOAT  shift 199
	BOOL  shift 201
	ANY  shift 202
	VAR_ARG  shift 257
	.  error

	data_type  goto 256

state 241
	fn_def_param:  identifier EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 258
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 242
	expr_colon_expr:  expr_colon_expr COMMA expr COLON.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 259
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 243
	index_expr:  DOT LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET.    (141)

	.  reduce 141 (src line 723)


state 244
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON for_loop_elem.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 260
	empty_block  goto 129

state 245
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON stmt_block.    (98)

	.  reduce 98 (src line 512)


state 246
	for_stmt:  FOR for_init_elem SEMICOLON SEMICOLON for_loop_elem stmt_block.    (99)

	.  reduce 99 (src line 516)


state 247
	for_stmt:  FOR SEMICOLON expr SEMICOLON for_loop_elem stmt_block.    (101)

	.  reduce 101 (src line 524)


state 248
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON.expr_or_empty RIGHT_BRACKET 
	EOLS_SPACE: .    (11)

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	EOL  shift 9
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  reduce 11 (src line 171)

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 234
	map_literal  goto 39
	expr_or_empty  goto 261
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46
	EOLS  goto 163
	EOLS_SPACE  goto 162

state 249
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET.    (146)

	.  reduce 146 (src line 752)


state 250
	let_stmt:  LET identifier COLON data_type EQ expr.    (55)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 55 (src line 295)


state 251
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET data_type.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 262
	empty_block  goto 129

state 252
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN.fn_ret_types_multi RIGHT_PAREN stmt_block 

	STR  shift 200
	INT  shift 198
	FLOAT  shift 199
	BOOL  shift 201
	ANY  shift 202
	.  error

	fn_ret_types_multi  goto 263
	data_type  goto 264

state 253
	fn_def_params:  fn_def_params COMMA fn_def_param.    (72)

	.  reduce 72 (src line 382)


state 254
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN stmt_block.    (78)

	.  reduce 78 (src line 413)


state 255
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET.data_type stmt_block 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET.LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block 

	LEFT_PAREN  shift 266
	STR  shift 200
	INT  shift 198
	FLOAT  shift 199
	BOOL  shift 201
	ANY  shift 202
	.  error

	data_type  goto 265

state 256
	fn_def_param:  identifier COLON data_type.    (64)
	fn_def_param:  identifier COLON data_type.EQ expr 

	EQ  shift 267
	.  reduce 64 (src line 344)


state 257
	fn_def_param:  identifier COLON VAR_ARG.data_type 
	fn_def_param:  identifier COLON VAR_ARG.    (66)

	STR  shift 200
	INT  shift 198
	FLOAT  shift 199
	BOOL  shift 201
	ANY  shift 202
	.  reduce 66 (src line 352)

	data_type  goto 268

state 258
	fn_def_param:  identifier EQ expr.    (67)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 67 (src line 356)


state 259
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	expr_colon_expr:  expr_colon_expr COMMA expr COLON expr.    (151)

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 151 (src line 779)


state 260
	for_stmt:  FOR for_init_elem SEMICOLON expr SEMICOLON for_loop_elem stmt_block.    (97)

	.  reduce 97 (src line 508)


state 261
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty.RIGHT_BRACKET 

	RIGHT_BRACKET  shift 269
	.  error


state 262
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET data_type stmt_block.    (76)

	.  reduce 76 (src line 405)


state 263
	fn_ret_types_multi:  fn_ret_types_multi.COMMA data_type 
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi.RIGHT_PAREN stmt_block 

	COMMA  shift 270
	RIGHT_PAREN  shift 271
	.  error


state 264
	fn_ret_types_multi:  data_type.    (73)

	.  reduce 73 (src line 389)


state 265
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 272
	empty_block  goto 129

state 266
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN.fn_ret_types_multi RIGHT_PAREN stmt_block 

	STR  shift 200
	INT  shift 198
	FLOAT  shift 199
	BOOL  shift 201
	ANY  shift 202
	.  error

	fn_ret_types_multi  goto 273
	data_type  goto 264

state 267
	fn_def_param:  identifier COLON data_type EQ.expr 

	ID  shift 50
	NUMBER  shift 52
	LEFT_PAREN  shift 61
	LEFT_BRACKET  shift 59
	LEFT_BRACE  shift 60
	STRING  shift 55
	QUOTED_STRING  shift 51
	MULTILINE_STRING  shift 56
	ADD  shift 62
	SUB  shift 63
	NOT  shift 64
	DOT  shift 65
	TRUE  shift 53
	FALSE  shift 54
	NIL  shift 57
	NULL  shift 58
	.  error

	call_expr  goto 48
	identifier  goto 36
	unary_expr  goto 41
	conditional_expr  goto 42
	arithmeticExpr  goto 43
	paren_expr  goto 40
	index_expr  goto 45
	attr_expr  goto 44
	in_expr  goto 47
	expr  goto 274
	map_literal  goto 39
	list_literal  goto 38
	basic_literal  goto 37
	slice_expr  goto 46

state 268
	fn_def_param:  identifier COLON VAR_ARG data_type.    (65)

	.  reduce 65 (src line 348)


state 269
	slice_expr:  expr LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET.    (145)

	.  reduce 145 (src line 748)


state 270
	fn_ret_types_multi:  fn_ret_types_multi COMMA.data_type 

	STR  shift 200
	INT  shift 198
	FLOAT  shift 199
	BOOL  shift 201
	ANY  shift 202
	.  error

	data_type  goto 275

state 271
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 276
	empty_block  goto 129

state 272
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET data_type stmt_block.    (79)

	.  reduce 79 (src line 417)


state 273
	fn_ret_types_multi:  fn_ret_types_multi.COMMA data_type 
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi.RIGHT_PAREN stmt_block 

	COMMA  shift 270
	RIGHT_PAREN  shift 277
	.  error


state 274
	fn_def_param:  identifier COLON data_type EQ expr.    (68)
	in_expr:  expr.IN expr 
	call_expr:  expr.LEFT_PAREN function_args EOLS_SPACE RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN function_args COMMA RIGHT_PAREN 
	call_expr:  expr.LEFT_PAREN RIGHT_PAREN 
	conditional_expr:  expr.GTE expr 
	conditional_expr:  expr.GT expr 
	conditional_expr:  expr.OR expr 
	conditional_expr:  expr.AND expr 
	conditional_expr:  expr.LT expr 
	conditional_expr:  expr.LTE expr 
	conditional_expr:  expr.NEQ expr 
	conditional_expr:  expr.EQEQ expr 
	arithmeticExpr:  expr.ADD expr 
	arithmeticExpr:  expr.SUB expr 
	arithmeticExpr:  expr.MUL expr 
	arithmeticExpr:  expr.DIV expr 
	arithmeticExpr:  expr.MOD expr 
	index_expr:  expr.LEFT_BRACKET expr EOLS_SPACE RIGHT_BRACKET 
	attr_expr:  expr.DOT expr 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty COLON expr_or_empty RIGHT_BRACKET 
	slice_expr:  expr.LEFT_BRACKET expr_or_empty COLON expr_or_empty RIGHT_BRACKET 

	LEFT_PAREN  shift 89
	LEFT_BRACKET  shift 103
	ADD  shift 98
	SUB  shift 99
	MUL  shift 100
	DIV  shift 101
	MOD  shift 102
	GTE  shift 90
	GT  shift 91
	LT  shift 94
	LTE  shift 95
	NEQ  shift 96
	EQEQ  shift 97
	AND  shift 93
	OR  shift 92
	DOT  shift 104
	IN  shift 88
	.  reduce 68 (src line 360)


state 275
	fn_ret_types_multi:  fn_ret_types_multi COMMA data_type.    (74)

	.  reduce 74 (src line 393)


state 276
	fn_def_stmt:  FN identifier LEFT_PAREN RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block.    (77)

	.  reduce 77 (src line 409)


state 277
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN.stmt_block 

	LEFT_BRACE  shift 130
	.  error

	stmt_block  goto 278
	empty_block  goto 129

state 278
	fn_def_stmt:  FN identifier LEFT_PAREN fn_def_params RIGHT_PAREN FN_RET LEFT_PAREN fn_ret_types_multi RIGHT_PAREN stmt_block.    (80)

	.  reduce 80 (src line 421)


86 terminals, 52 nonterminals
163 grammar rules, 279/16000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
151 working sets used
memory: parser 1263/240000
237 extra closures
1819 shift entries, 13 exceptions
168 goto entries
858 entries saved by goto default
Optimizer space used: output 1323/240000
1323 table entries, 520 zero
maximum spread: 84, maximum offset: 277
